{"ast":null,"code":"var _jsxFileName = \"/Users/josefutleg/Desktop/projects/fika/fika/client/src/tools/projects.jsx\";\nimport React, { Component } from \"react\";\nimport \"../sidebar/sidebarStyle.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faProjectDiagram } from \"@fortawesome/free-solid-svg-icons\";\nimport CreateProject from \"./createProject\";\n\nclass Projects extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isExpanded: false,\n      isActive: false,\n      isQuickSelect: false,\n      options: [{\n        option: \"View Projects\",\n        id: \"000\",\n        func: this.props.handleProjects,\n        isSolid: true\n      }, {\n        option: \"New Project\",\n        id: \"001a\"\n      }],\n      isMinimized: false\n    };\n\n    this.handleClickOut = e => {\n      this.setState({\n        isExpanded: false\n      });\n      this.setState({\n        isActive: false\n      });\n    };\n\n    this.handleViewProjects = e => {\n      this.props.handleProjects(e);\n      this.setState({\n        isExpanded: false\n      });\n      this.setState({\n        isActive: false\n      });\n    };\n\n    this.handleViewProject = e => {\n      this.props.viewProject(e);\n      this.setState({\n        isExpanded: false\n      });\n      this.setState({\n        isActive: false\n      });\n    };\n\n    this.handleClose = e => {\n      this.setState({\n        isQuickSelect: false\n      });\n      console.log(\"changed\");\n    };\n\n    this.handleMinimize = e => {\n      if (this.state.isMinimized === false) this.setState({\n        isMinimized: true\n      });else this.setState({\n        isMinimized: false\n      });\n    };\n\n    this.expand = e => {\n      if (this.node.contains(e.target)) {\n        if (this.state.isExpanded === false) {\n          this.setState({\n            isExpanded: true\n          });\n          this.setState({\n            isActive: true\n          });\n        }\n\n        return;\n      } else this.handleClickOut();\n    };\n  }\n\n  //need a componentdidmount once mongo is connected. all options except view all will be database saved. use 'id' key to store mongo ._id to send request to db\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.expand, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.expand, false);\n  }\n\n  render() {\n    const openDivStyle = {\n      width: \"200px\",\n      float: \"left\",\n      overflow: \"hidden\" // backgroundColor: \"lightgreen\"\n\n    };\n    const closeDivStyle = {\n      width: \"0px\",\n      display: \"none\"\n    };\n    const activeDivStyle = {\n      backgroundColor: \"orangered\"\n    };\n    const inactiveDivStyle = {\n      backgroundColor: \"#222222\"\n    };\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"option\",\n      ref: node => this.node = node,\n      onClick: this.expand,\n      style: this.state.isActive ? activeDivStyle : inactiveDivStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"optionIcon\",\n      icon: faProjectDiagram,\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"expandOptions\",\n      style: this.state.isExpanded ? openDivStyle : closeDivStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.options.map(x => React.createElement(\"p\", {\n      className: \"expandOption\",\n      key: x.id,\n      datavalue: x.id,\n      dataname: x.option,\n      onClick: x.isSolid ? this.handleViewProjects : this.handleViewProject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, x.option)))), this.state.isQuickSelect === true && React.createElement(CreateProject, {\n      handleClose: this.handleClose,\n      handleMinimize: this.handleMinimize,\n      isMinimized: this.state.isMinimized,\n      userInfo: this.props.userInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/Users/josefutleg/Desktop/projects/fika/fika/client/src/tools/projects.jsx"],"names":["React","Component","FontAwesomeIcon","faProjectDiagram","CreateProject","Projects","state","isExpanded","isActive","isQuickSelect","options","option","id","func","props","handleProjects","isSolid","isMinimized","handleClickOut","e","setState","handleViewProjects","handleViewProject","viewProject","handleClose","console","log","handleMinimize","expand","node","contains","target","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","openDivStyle","width","float","overflow","closeDivStyle","display","activeDivStyle","backgroundColor","inactiveDivStyle","map","x","userInfo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../sidebar/sidebarStyle.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faProjectDiagram } from \"@fortawesome/free-solid-svg-icons\";\nimport CreateProject from \"./createProject\";\n\nclass Projects extends Component {\n  state = {\n    isExpanded: false,\n    isActive: false,\n    isQuickSelect: false,\n    options: [\n      {\n        option: \"View Projects\",\n        id: \"000\",\n        func: this.props.handleProjects,\n        isSolid: true\n      },\n      {\n        option: \"New Project\", id: \"001a\"\n      },\n    ],\n    isMinimized: false,\n  };\n\n  //need a componentdidmount once mongo is connected. all options except view all will be database saved. use 'id' key to store mongo ._id to send request to db\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.expand, false);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.expand, false);\n  }\n  handleClickOut = e => {\n    this.setState({ isExpanded: false });\n    this.setState({ isActive: false });\n  };\n\n  handleViewProjects = e => {\n    this.props.handleProjects(e);\n    this.setState({ isExpanded: false });\n    this.setState({ isActive: false });\n  };\n\n  handleViewProject = e => {\n    this.props.viewProject(e);\n    this.setState({ isExpanded: false });\n    this.setState({ isActive: false });\n  };\n\n  handleClose = e => {\n    this.setState({ isQuickSelect: false });\n    console.log(\"changed\");\n  };\n\n  handleMinimize = e => {\n    if (this.state.isMinimized === false) this.setState({ isMinimized: true });\n    else this.setState({ isMinimized: false });\n  };\n\n  expand = e => {\n    if (this.node.contains(e.target)) {\n      if (this.state.isExpanded === false) {\n        this.setState({ isExpanded: true });\n        this.setState({ isActive: true });\n      }\n      return;\n    } else this.handleClickOut();\n  };\n\n  render() {\n    const openDivStyle = {\n      width: \"200px\",\n      float: \"left\",\n      overflow: \"hidden\"\n      // backgroundColor: \"lightgreen\"\n    };\n    const closeDivStyle = {\n      width: \"0px\",\n      display: \"none\"\n    };\n    const activeDivStyle = {\n      backgroundColor: \"orangered\"\n    };\n    const inactiveDivStyle = {\n      backgroundColor: \"#222222\"\n    };\n    return (\n      <React.Fragment>\n        <div\n          className=\"option\"\n          ref={node => (this.node = node)}\n          onClick={this.expand}\n          style={this.state.isActive ? activeDivStyle : inactiveDivStyle}\n        >\n          <FontAwesomeIcon\n            className=\"optionIcon\"\n            icon={faProjectDiagram}\n            size=\"lg\"\n          />\n          <div\n            className=\"expandOptions\"\n            style={this.state.isExpanded ? openDivStyle : closeDivStyle}\n          >\n            {this.state.options.map(x => (\n              <p\n                className=\"expandOption\"\n                key={x.id}\n                datavalue={x.id}\n                dataname={x.option}\n                onClick={\n                  x.isSolid ? this.handleViewProjects : this.handleViewProject\n                }\n              >\n                {x.option}\n              </p>\n            ))}\n          </div>\n        </div>\n        {this.state.isQuickSelect === true && (\n          <CreateProject\n            handleClose={this.handleClose}\n            handleMinimize={this.handleMinimize}\n            isMinimized={this.state.isMinimized}\n            userInfo={this.props.userInfo}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}