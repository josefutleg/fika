{"ast":null,"code":"var _jsxFileName = \"/Users/josefutleg/Desktop/code/app/fika/fika/client/src/weatherWidget/weatherIndicator.jsx\";\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCloud, faCloudMoon, faMoon, faSun, fas, faCloudSun } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Indicator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      amPm: \"am\",\n      description: \"Clear\",\n      icon: faSun\n    };\n\n    this.changeIcon = () => {\n      if (this.props.amPm == \"am\") {\n        if (this.props.description == \"Clear\") this.setState({\n          icon: faSun\n        });\n        if (this.props.description == \"Clouds\") this.setState({\n          icon: faCloudSun\n        });else this.setState({\n          icon: faSun\n        });\n      }\n\n      if (this.props.amPm == \"pm\" && this.props.h < 7) {\n        if (this.props.description == \"Clear\") this.setState({\n          icon: faMoon\n        });\n        if (this.props.description == \"Clouds\") this.setState({\n          icon: faCloudMoon\n        });else this.setState({\n          icon: faMoon\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.changeIcon();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: this.state.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Indicator;","map":{"version":3,"sources":["/Users/josefutleg/Desktop/code/app/fika/fika/client/src/weatherWidget/weatherIndicator.jsx"],"names":["React","Component","FontAwesomeIcon","faCloud","faCloudMoon","faMoon","faSun","fas","faCloudSun","Indicator","state","amPm","description","icon","changeIcon","props","setState","h","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACEC,OADF,EAEEC,WAFF,EAGEC,MAHF,EAIEC,KAJF,EAKEC,GALF,EAMEC,UANF,QAOO,mCAPP;;AAQA,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCS,KADgC,GACxB;AACNC,MAAAA,IAAI,EAAE,IADA;AAENC,MAAAA,WAAW,EAAE,OAFP;AAGNC,MAAAA,IAAI,EAAEP;AAHA,KADwB;;AAAA,SAOhCQ,UAPgC,GAOnB,MAAM;AACjB,UAAI,KAAKC,KAAL,CAAWJ,IAAX,IAAmB,IAAvB,EAA6B;AAC3B,YAAI,KAAKI,KAAL,CAAWH,WAAX,IAA0B,OAA9B,EAAuC,KAAKI,QAAL,CAAc;AAAEH,UAAAA,IAAI,EAAEP;AAAR,SAAd;AACvC,YAAI,KAAKS,KAAL,CAAWH,WAAX,IAA0B,QAA9B,EACE,KAAKI,QAAL,CAAc;AAAEH,UAAAA,IAAI,EAAEL;AAAR,SAAd,EADF,KAEK,KAAKQ,QAAL,CAAc;AAAEH,UAAAA,IAAI,EAAEP;AAAR,SAAd;AACN;;AACD,UAAI,KAAKS,KAAL,CAAWJ,IAAX,IAAmB,IAAnB,IAA2B,KAAKI,KAAL,CAAWE,CAAX,GAAe,CAA9C,EAAiD;AAC/C,YAAI,KAAKF,KAAL,CAAWH,WAAX,IAA0B,OAA9B,EAAuC,KAAKI,QAAL,CAAc;AAAEH,UAAAA,IAAI,EAAER;AAAR,SAAd;AACvC,YAAI,KAAKU,KAAL,CAAWH,WAAX,IAA0B,QAA9B,EACE,KAAKI,QAAL,CAAc;AAAEH,UAAAA,IAAI,EAAET;AAAR,SAAd,EADF,KAEK,KAAKY,QAAL,CAAc;AAAEH,UAAAA,IAAI,EAAER;AAAR,SAAd;AACN;AACF,KApB+B;AAAA;;AAsBhCa,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,UAAL;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWG,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAOD;;AAlC+B;;AAqClC,eAAeJ,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCloud,\n  faCloudMoon,\n  faMoon,\n  faSun,\n  fas,\n  faCloudSun\n} from \"@fortawesome/free-solid-svg-icons\";\nclass Indicator extends Component {\n  state = {\n    amPm: \"am\",\n    description: \"Clear\",\n    icon: faSun\n  };\n\n  changeIcon = () => {\n    if (this.props.amPm == \"am\") {\n      if (this.props.description == \"Clear\") this.setState({ icon: faSun });\n      if (this.props.description == \"Clouds\")\n        this.setState({ icon: faCloudSun });\n      else this.setState({ icon: faSun });\n    }\n    if (this.props.amPm == \"pm\" && this.props.h < 7) {\n      if (this.props.description == \"Clear\") this.setState({ icon: faMoon });\n      if (this.props.description == \"Clouds\")\n        this.setState({ icon: faCloudMoon });\n      else this.setState({ icon: faMoon });\n    }\n  };\n\n  componentDidMount() {\n    this.changeIcon();\n  }\n\n  render() {\n    return (\n      <div>\n        <FontAwesomeIcon icon={this.state.icon} />\n        {/* {this.state.amPm == \"am\" && <FontAwesomeIcon icon={faCloud} />}\n        {this.state.amPm == \"pm\" && <FontAwesomeIcon icon={faCloudMoon} />} */}\n      </div>\n    );\n  }\n}\n\nexport default Indicator;\n"]},"metadata":{},"sourceType":"module"}