{"ast":null,"code":"var _jsxFileName = \"/Users/josefutleg/Desktop/code/app/fika/fika/client/src/tools/tasks.jsx\";\nimport React, { Component } from \"react\";\nimport \"../sidebar/sidebarStyle.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTasks } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Tasks extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isExpanded: false,\n      isActive: false,\n      options: [{\n        option: \"View All\",\n        id: \"000\",\n        isSolid: true\n      }, {\n        option: \"Create Task\",\n        id: \"001\"\n      }]\n    };\n\n    this.handleClickOut = e => {\n      this.setState({\n        isExpanded: false\n      });\n      this.setState({\n        isActive: false\n      });\n    };\n\n    this.handleViewTasks = e => {\n      this.props.loadTasks(e);\n      this.setState({\n        isExpanded: false\n      });\n      this.setState({\n        isActive: false\n      });\n    };\n\n    this.handleCreateTask = e => {\n      alert(\"create task\");\n      this.setState({\n        isExpanded: false\n      });\n      this.setState({\n        isActive: false\n      });\n    };\n\n    this.expand = e => {\n      if (this.node.contains(e.target)) {\n        if (this.state.isExpanded === false) {\n          this.setState({\n            isExpanded: true\n          });\n          this.setState({\n            isActive: true\n          });\n        }\n\n        return;\n      } else this.handleClickOut();\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.expand, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.expand, false);\n  }\n\n  render() {\n    const openDivStyle = {\n      width: \"120px\",\n      float: \"left\",\n      backgroundColor: \"lightgreen\",\n      overflow: \"hidden\"\n    };\n    const closeDivStyle = {\n      width: \"0px\",\n      display: \"none\"\n    };\n    const activeDivStyle = {\n      backgroundColor: \"lightgreen\"\n    };\n    const inactiveDivStyle = {\n      backgroundColor: \"lightsalmon\"\n    };\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"option\",\n      ref: node => this.node = node,\n      onClick: this.expand,\n      style: this.state.isActive ? activeDivStyle : inactiveDivStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"optionIcon\",\n      icon: faTasks,\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"expandOptions\",\n      style: this.state.isExpanded ? openDivStyle : closeDivStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.options.map(x => React.createElement(\"p\", {\n      key: x.id,\n      className: \"expandOption\",\n      datavalue: x.id,\n      dataname: x.option,\n      onClick: x.isSolid ? this.handleViewTasks : this.handleCreateTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, x.option)))));\n  }\n\n}\n\nexport default Tasks;","map":{"version":3,"sources":["/Users/josefutleg/Desktop/code/app/fika/fika/client/src/tools/tasks.jsx"],"names":["React","Component","FontAwesomeIcon","faTasks","Tasks","state","isExpanded","isActive","options","option","id","isSolid","handleClickOut","e","setState","handleViewTasks","props","loadTasks","handleCreateTask","alert","expand","node","contains","target","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","openDivStyle","width","float","backgroundColor","overflow","closeDivStyle","display","activeDivStyle","inactiveDivStyle","map","x"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../sidebar/sidebarStyle.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTasks } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Tasks extends Component {\n  state = {\n    isExpanded: false,\n    isActive: false,\n    options: [\n      {\n        option: \"View All\",\n        id: \"000\",\n        isSolid: true\n      },\n      { option: \"Create Task\", id: \"001\" }\n    ]\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.expand, false);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.expand, false);\n  }\n  handleClickOut = e => {\n    this.setState({ isExpanded: false });\n    this.setState({ isActive: false });\n  };\n\n  handleViewTasks = e => {\n    this.props.loadTasks(e);\n    this.setState({ isExpanded: false });\n    this.setState({ isActive: false });\n  };\n\n  handleCreateTask = e => {\n    alert(\"create task\");\n    this.setState({ isExpanded: false });\n    this.setState({ isActive: false });\n  };\n\n  expand = e => {\n    if (this.node.contains(e.target)) {\n      if (this.state.isExpanded === false) {\n        this.setState({ isExpanded: true });\n        this.setState({ isActive: true });\n      }\n      return;\n    } else this.handleClickOut();\n  };\n\n  render() {\n    const openDivStyle = {\n      width: \"120px\",\n      float: \"left\",\n      backgroundColor: \"lightgreen\",\n      overflow: \"hidden\"\n    };\n    const closeDivStyle = {\n      width: \"0px\",\n      display: \"none\"\n    };\n    const activeDivStyle = {\n      backgroundColor: \"lightgreen\"\n    };\n    const inactiveDivStyle = {\n      backgroundColor: \"lightsalmon\"\n    };\n    return (\n      <React.Fragment>\n        <div\n          className=\"option\"\n          ref={node => (this.node = node)}\n          onClick={this.expand}\n          style={this.state.isActive ? activeDivStyle : inactiveDivStyle}\n        >\n          <FontAwesomeIcon className=\"optionIcon\" icon={faTasks} size=\"lg\" />\n          <div\n            className=\"expandOptions\"\n            style={this.state.isExpanded ? openDivStyle : closeDivStyle}\n          >\n            {this.state.options.map(x => (\n              <p\n                key={x.id}\n                className=\"expandOption\"\n                datavalue={x.id}\n                dataname={x.option}\n                onClick={\n                  x.isSolid ? this.handleViewTasks : this.handleCreateTask\n                }\n              >\n                {x.option}\n              </p>\n            ))}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}