{"ast":null,"code":"import _objectSpread from \"/Users/josefutleg/Desktop/projects/fika/fika/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/josefutleg/Desktop/projects/fika/fika/src/components/counters.jsx\";\nimport React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 4\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n\n    this.handleIncrement = counter => {\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = _objectSpread({}, counter);\n      counters[index]++;\n      this.setState({\n        counters\n      });\n      console.log(counter);\n    };\n\n    this.handleDelete = counterId => {\n      console.log(\"event handler called\", counterId);\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({\n        counters\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.counters.map(counter => React.createElement(Counter, {\n      key: counter.id,\n      onDelete: this.handleDelete,\n      onIncrement: this.handleIncrement,\n      counter: counter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Counters;","map":{"version":3,"sources":["/Users/josefutleg/Desktop/projects/fika/fika/src/components/counters.jsx"],"names":["React","Component","Counter","Counters","state","counters","id","value","handleIncrement","counter","index","indexOf","setState","console","log","handleDelete","counterId","filter","c","render","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BG,KAD+B,GACvB;AACNC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE;AAFT,OADQ,EAKR;AACED,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE;AAFT,OALQ,EASR;AACED,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE;AAFT,OATQ,EAaR;AACED,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAbQ;AADJ,KADuB;;AAAA,SAsB/BC,eAtB+B,GAsBbC,OAAO,IAAI;AAC3B,YAAMJ,QAAQ,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,CAAjB;AACA,YAAMK,KAAK,GAAGL,QAAQ,CAACM,OAAT,CAAiBF,OAAjB,CAAd;AACAJ,MAAAA,QAAQ,CAACK,KAAD,CAAR,qBAAuBD,OAAvB;AACAJ,MAAAA,QAAQ,CAACK,KAAD,CAAR;AACA,WAAKE,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACD,KA7B8B;;AAAA,SA+B/BM,YA/B+B,GA+BhBC,SAAS,IAAI;AAC1BH,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCE,SAApC;AACA,YAAMX,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBY,MAApB,CAA2BC,CAAC,IAAIA,CAAC,CAACZ,EAAF,KAASU,SAAzC,CAAjB;AACA,WAAKJ,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACD,KAnC8B;AAAA;;AAoC/Bc,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKf,KAAL,CAAWC,QAAX,CAAoBe,GAApB,CAAwBX,OAAO,IAC9B,oBAAC,OAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACH,EADf;AAEE,MAAA,QAAQ,EAAE,KAAKS,YAFjB;AAGE,MAAA,WAAW,EAAE,KAAKP,eAHpB;AAIE,MAAA,OAAO,EAAEC,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF;AAYD;;AAjD8B;;AAoDjC,eAAeN,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  state = {\n    counters: [\n      {\n        id: 1,\n        value: 4\n      },\n      {\n        id: 2,\n        value: 0\n      },\n      {\n        id: 3,\n        value: 0\n      },\n      {\n        id: 4,\n        value: 0\n      }\n    ]\n  };\n\n  handleIncrement = counter => {\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index]++;\n    this.setState({ counters });\n    console.log(counter);\n  };\n\n  handleDelete = counterId => {\n    console.log(\"event handler called\", counterId);\n    const counters = this.state.counters.filter(c => c.id !== counterId);\n    this.setState({ counters });\n  };\n  render() {\n    return (\n      <div>\n        {this.state.counters.map(counter => (\n          <Counter\n            key={counter.id}\n            onDelete={this.handleDelete}\n            onIncrement={this.handleIncrement}\n            counter={counter}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Counters;\n"]},"metadata":{},"sourceType":"module"}