{"ast":null,"code":"var _jsxFileName = \"/Users/josefutleg/Desktop/code/app/fika/fika/client/src/tools/calendar.jsx\";\nimport React, { Component } from \"react\";\nimport \"../sidebar/sidebarStyle.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendar } from \"@fortawesome/free-solid-svg-icons\"; // import CreateTask from \"./createTask\";\n\nclass Calendar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isExpanded: false,\n      isActive: false,\n      isQuickSelect: false,\n      search: null,\n      options: [{\n        option: \"View Calendar\",\n        id: \"000\",\n        isSolid: true\n      }, {\n        option: \"New Event\",\n        id: \"001\"\n      }],\n      isMinimized: false\n    };\n\n    this.handleClickOut = e => {\n      this.setState({\n        isExpanded: false\n      });\n      this.setState({\n        isActive: false\n      });\n    };\n\n    this.handleViewTasks = e => {\n      this.props.loadCalendar();\n      this.setState({\n        isExpanded: false\n      });\n      this.setState({\n        isActive: false\n      });\n    };\n\n    this.handleNewTask = e => {\n      this.setState({\n        isQuickSelect: true\n      });\n      this.setState({\n        isExpanded: false\n      });\n      this.setState({\n        isMinimized: false\n      });\n    };\n\n    this.handleClose = e => {\n      this.setState({\n        isQuickSelect: false\n      });\n      console.log(\"changed\");\n    };\n\n    this.handleMinimize = e => {\n      if (this.state.isMinimized === false) this.setState({\n        isMinimized: true\n      });else this.setState({\n        isMinimized: false\n      });\n    };\n\n    this.expand = e => {\n      if (this.node.contains(e.target)) {\n        if (this.state.isExpanded === false) {\n          this.setState({\n            isExpanded: true\n          });\n          this.setState({\n            isActive: true\n          });\n        }\n\n        return;\n      } else this.handleClickOut();\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.expand, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.expand, false);\n  }\n\n  render() {\n    const openDivStyle = {\n      width: \"200px\",\n      float: \"left\",\n      // backgroundColor: \"lightgreen\",\n      overflow: \"hidden\"\n    };\n    const closeDivStyle = {\n      width: \"0px\",\n      display: \"none\"\n    };\n    const activeDivStyle = {\n      backgroundColor: \"lightgreen\"\n    };\n    const inactiveDivStyle = {\n      backgroundColor: \"#222222\"\n    };\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"option\",\n      ref: node => this.node = node,\n      onClick: this.expand,\n      style: this.state.isActive ? activeDivStyle : inactiveDivStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"optionIcon\",\n      icon: faCalendar,\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"expandOptions\",\n      style: this.state.isExpanded ? openDivStyle : closeDivStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.options.map(x => React.createElement(\"p\", {\n      key: x.id,\n      className: \"expandOption\",\n      datavalue: x.id,\n      dataname: x.option,\n      onClick: x.isSolid ? this.handleViewTasks : this.handleNewTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, x.option)))));\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/josefutleg/Desktop/code/app/fika/fika/client/src/tools/calendar.jsx"],"names":["React","Component","FontAwesomeIcon","faCalendar","Calendar","state","isExpanded","isActive","isQuickSelect","search","options","option","id","isSolid","isMinimized","handleClickOut","e","setState","handleViewTasks","props","loadCalendar","handleNewTask","handleClose","console","log","handleMinimize","expand","node","contains","target","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","openDivStyle","width","float","overflow","closeDivStyle","display","activeDivStyle","backgroundColor","inactiveDivStyle","map","x"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../sidebar/sidebarStyle.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendar } from \"@fortawesome/free-solid-svg-icons\";\n// import CreateTask from \"./createTask\";\n\nclass Calendar extends Component {\n  state = {\n    isExpanded: false,\n    isActive: false,\n    isQuickSelect: false,\n    search: null,\n    options: [\n      {\n        option: \"View Calendar\",\n        id: \"000\",\n        isSolid: true\n      },\n      { option: \"New Event\", id: \"001\" }\n    ],\n    isMinimized: false\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.expand, false);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.expand, false);\n  }\n  handleClickOut = e => {\n    this.setState({ isExpanded: false });\n    this.setState({ isActive: false });\n  };\n\n  handleViewTasks = e => {\n    this.props.loadCalendar();\n    this.setState({ isExpanded: false });\n    this.setState({ isActive: false });\n  };\n\n  handleNewTask = e => {\n    this.setState({ isQuickSelect: true });\n    this.setState({ isExpanded: false });\n    this.setState({ isMinimized: false });\n  };\n\n  handleClose = e => {\n    this.setState({ isQuickSelect: false });\n    console.log(\"changed\");\n  };\n\n  handleMinimize = e => {\n    if (this.state.isMinimized === false) this.setState({ isMinimized: true });\n    else this.setState({ isMinimized: false });\n  };\n\n  expand = e => {\n    if (this.node.contains(e.target)) {\n      if (this.state.isExpanded === false) {\n        this.setState({ isExpanded: true });\n        this.setState({ isActive: true });\n      }\n      return;\n    } else this.handleClickOut();\n  };\n\n  render() {\n    const openDivStyle = {\n      width: \"200px\",\n      float: \"left\",\n      // backgroundColor: \"lightgreen\",\n      overflow: \"hidden\"\n    };\n    const closeDivStyle = {\n      width: \"0px\",\n      display: \"none\"\n    };\n    const activeDivStyle = {\n      backgroundColor: \"lightgreen\"\n    };\n    const inactiveDivStyle = {\n      backgroundColor: \"#222222\"\n    };\n\n    return (\n      <React.Fragment>\n        <div\n          className=\"option\"\n          ref={node => (this.node = node)}\n          onClick={this.expand}\n          style={this.state.isActive ? activeDivStyle : inactiveDivStyle}\n        >\n          <FontAwesomeIcon className=\"optionIcon\" icon={faCalendar} size=\"lg\" />\n          <div\n            className=\"expandOptions\"\n            style={this.state.isExpanded ? openDivStyle : closeDivStyle}\n          >\n            {this.state.options.map(x => (\n              <p\n                key={x.id}\n                className=\"expandOption\"\n                datavalue={x.id}\n                dataname={x.option}\n                onClick={x.isSolid ? this.handleViewTasks : this.handleNewTask}\n              >\n                {x.option}\n              </p>\n            ))}\n          </div>\n        </div>\n\n        {/* {this.state.isQuickSelect === true && (\n          <CreateTask\n            handleClose={this.handleClose}\n            handleMinimize={this.handleMinimize}\n            isMinimized={this.state.isMinimized}\n          />\n        )} */}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}