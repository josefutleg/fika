{"ast":null,"code":"var _jsxFileName = \"/Users/josefutleg/Desktop/code/app/fika/fika/client/src/tools/projects.jsx\";\nimport React, { Component } from \"react\";\nimport \"../sidebar/sidebarStyle.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faProjectDiagram } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Projects extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      options: [{\n        option: \"View All\",\n        func: this.props.handleProjects,\n        isSolid: true\n      }, {\n        option: \"Project 1\",\n        id: \"001\",\n        func: this.props.viewProject\n      }, {\n        option: \"Project 2\",\n        id: \"002\",\n        func: this.props.viewProject\n      }, {\n        option: \"Project 3\",\n        id: \"003\",\n        func: this.props.viewProject\n      }]\n    };\n  }\n\n  //need a componentdidmount once mongo is connected. all options except view all will be database saved\n  render() {\n    const openDivStyle = {\n      width: \"150px\",\n      paddingLeft: \"20px\",\n      float: \"left\",\n      overflow: \"hidden\"\n    };\n    const closeDivStyle = {\n      width: \"0px\",\n      display: \"none\"\n    };\n    const openIconStyle = {\n      float: \"left\",\n      marginLeft: \"5%\"\n    };\n    const closeIconStyle = {\n      textAlign: \"center\"\n    };\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"selectionClose\",\n      style: this.props.isExpanded ? openIconStyle : closeIconStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faProjectDiagram,\n      size: \"lg\",\n      onClick: this.props.expand,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: this.props.isExpanded ? openDivStyle : closeDivStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.options.map(x => React.createElement(\"p\", {\n      key: x.id,\n      className: \"expandOption\",\n      dataValue: x.id,\n      onClick: x.isSolid ? this.props.handleProjects : this.props.viewProject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, x.option)))) // <div className=\"expanded\">\n    //   {this.state.options.map(x => (\n    //     <p\n    //       key={x}\n    //       onClick={\n    //         this.state.isSolid\n    //           ? this.props.handleProjects\n    //           : this.props.viewProject\n    //       }\n    //     >\n    //       {x.option}\n    //     </p>\n    //   ))}\n    //   <span className=\"tooltip\">projects</span>\n    // </div>\n    ;\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/Users/josefutleg/Desktop/code/app/fika/fika/client/src/tools/projects.jsx"],"names":["React","Component","FontAwesomeIcon","faProjectDiagram","Projects","state","options","option","func","props","handleProjects","isSolid","id","viewProject","render","openDivStyle","width","paddingLeft","float","overflow","closeDivStyle","display","openIconStyle","marginLeft","closeIconStyle","textAlign","isExpanded","expand","map","x"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,6BAAP;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,gBAAT,QAAiC,mCAAjC;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BI,KAD+B,GACvB;AACNC,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,MAAM,EAAE,UADV;AAEEC,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,cAFnB;AAGEC,QAAAA,OAAO,EAAE;AAHX,OADO,EAMP;AAAEJ,QAAAA,MAAM,EAAE,WAAV;AAAuBK,QAAAA,EAAE,EAAE,KAA3B;AAAkCJ,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWI;AAAnD,OANO,EAOP;AAAEN,QAAAA,MAAM,EAAE,WAAV;AAAuBK,QAAAA,EAAE,EAAE,KAA3B;AAAkCJ,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWI;AAAnD,OAPO,EAQP;AAAEN,QAAAA,MAAM,EAAE,WAAV;AAAuBK,QAAAA,EAAE,EAAE,KAA3B;AAAkCJ,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWI;AAAnD,OARO;AADH,KADuB;AAAA;;AAc/B;AAEAC,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,GAAG;AACnBC,MAAAA,KAAK,EAAE,OADY;AAEnBC,MAAAA,WAAW,EAAE,MAFM;AAGnBC,MAAAA,KAAK,EAAE,MAHY;AAInBC,MAAAA,QAAQ,EAAE;AAJS,KAArB;AAMA,UAAMC,aAAa,GAAG;AACpBJ,MAAAA,KAAK,EAAE,KADa;AAEpBK,MAAAA,OAAO,EAAE;AAFW,KAAtB;AAIA,UAAMC,aAAa,GAAG;AACpBJ,MAAAA,KAAK,EAAE,MADa;AAEpBK,MAAAA,UAAU,EAAE;AAFQ,KAAtB;AAIA,UAAMC,cAAc,GAAG;AACrBC,MAAAA,SAAS,EAAE;AADU,KAAvB;AAGA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,gBADZ;AAEE,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWiB,UAAX,GAAwBJ,aAAxB,GAAwCE,cAFjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,eAAD;AACE,MAAA,IAAI,EAAErB,gBADR;AAEE,MAAA,IAAI,EAAC,IAFP;AAGE,MAAA,OAAO,EAAE,KAAKM,KAAL,CAAWkB,MAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,EAWE;AAAK,MAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWiB,UAAX,GAAwBX,YAAxB,GAAuCK,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKf,KAAL,CAAWC,OAAX,CAAmBsB,GAAnB,CAAuBC,CAAC,IACvB;AACE,MAAA,GAAG,EAAEA,CAAC,CAACjB,EADT;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,SAAS,EAAEiB,CAAC,CAACjB,EAHf;AAIE,MAAA,OAAO,EACLiB,CAAC,CAAClB,OAAF,GAAY,KAAKF,KAAL,CAAWC,cAAvB,GAAwC,KAAKD,KAAL,CAAWI,WALvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGgB,CAAC,CAACtB,MARL,CADD,CADH,CAXF,CADF,CA4BE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1CF;AA4CD;;AA9E8B;;AAiFjC,eAAeH,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../sidebar/sidebarStyle.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faProjectDiagram } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Projects extends Component {\n  state = {\n    options: [\n      {\n        option: \"View All\",\n        func: this.props.handleProjects,\n        isSolid: true\n      },\n      { option: \"Project 1\", id: \"001\", func: this.props.viewProject },\n      { option: \"Project 2\", id: \"002\", func: this.props.viewProject },\n      { option: \"Project 3\", id: \"003\", func: this.props.viewProject }\n    ]\n  };\n\n  //need a componentdidmount once mongo is connected. all options except view all will be database saved\n\n  render() {\n    const openDivStyle = {\n      width: \"150px\",\n      paddingLeft: \"20px\",\n      float: \"left\",\n      overflow: \"hidden\"\n    };\n    const closeDivStyle = {\n      width: \"0px\",\n      display: \"none\"\n    };\n    const openIconStyle = {\n      float: \"left\",\n      marginLeft: \"5%\"\n    };\n    const closeIconStyle = {\n      textAlign: \"center\"\n    };\n    return (\n      <React.Fragment>\n        <div\n          className=\"selectionClose\"\n          style={this.props.isExpanded ? openIconStyle : closeIconStyle}\n        >\n          <FontAwesomeIcon\n            icon={faProjectDiagram}\n            size=\"lg\"\n            onClick={this.props.expand}\n          />\n        </div>\n        <div style={this.props.isExpanded ? openDivStyle : closeDivStyle}>\n          {this.state.options.map(x => (\n            <p\n              key={x.id}\n              className=\"expandOption\"\n              dataValue={x.id}\n              onClick={\n                x.isSolid ? this.props.handleProjects : this.props.viewProject\n              }\n            >\n              {x.option}\n            </p>\n          ))}\n        </div>\n      </React.Fragment>\n\n      // <div className=\"expanded\">\n      //   {this.state.options.map(x => (\n      //     <p\n      //       key={x}\n      //       onClick={\n      //         this.state.isSolid\n      //           ? this.props.handleProjects\n      //           : this.props.viewProject\n      //       }\n      //     >\n      //       {x.option}\n      //     </p>\n      //   ))}\n      //   <span className=\"tooltip\">projects</span>\n      // </div>\n    );\n  }\n}\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}