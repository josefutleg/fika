{"ast":null,"code":"var _jsxFileName = \"/Users/josefutleg/Desktop/code/app/fika/fika/client/src/pages/CalendarComponent.jsx\";\nimport React, { Component } from \"react\";\nimport moment from \"moment\";\nimport \"./calendar.css\";\n\nclass CalendarComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.weekdayshort = moment.weekdaysShort();\n    this.state = {\n      dateObject: moment(),\n      allmonths: moment.months(),\n      month: \"\"\n    };\n\n    this.firstDayOfMonth = () => {\n      let dateObject = this.state.dateObject;\n      let firstDay = moment(dateObject).startOf(\"month\").format(\"d\");\n      return firstDay;\n    };\n\n    this.daysInMonth = () => {\n      return this.state.dateObject.daysInMonth();\n    };\n\n    this.currentDay = () => {\n      return this.state.dateObject.format(\"D\");\n    };\n\n    this.month = () => {\n      return this.state.dateObject.format(\"MMMM\");\n    };\n\n    this.year = () => {\n      return this.state.dateObject.format(\"Y\");\n    };\n\n    this.MonthList = props => {\n      let months = [];\n      props.data.map(data => {\n        months.push(React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, data)));\n      });\n    };\n\n    this.test = () => {\n      console.log(this.state.dateObject.format(\"MMM\"));\n    };\n\n    this.handleClick = e => {\n      e.persist();\n      let value = e.target.innerText;\n      let dataValue;\n\n      if (value == \"\") {\n        console.log(\"empty\");\n      } else {\n        dataValue = e.target.attributes.dataday.value;\n        console.log(dataValue);\n      }\n    };\n  }\n\n  componentDidMount() {\n    let currentMonth = this.month();\n    this.setState({\n      month: currentMonth\n    });\n  }\n\n  render() {\n    let weekdayshortname = this.weekdayshort.map(day => {\n      return React.createElement(\"th\", {\n        key: day,\n        className: \"week-day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, day);\n    });\n    let blanks = [];\n\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push(React.createElement(\"td\", {\n        className: \"calendar-day-empty\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"\"));\n    }\n\n    let daysInMonth = [];\n\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      let currentDay = d == this.currentDay() ? \"today\" : \"\";\n      daysInMonth.push(React.createElement(\"td\", {\n        key: d,\n        className: \"calendar-day-\".concat(currentDay),\n        dataday: d,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, d));\n    }\n\n    var totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n\n      if (i === totalSlots.length - 1) {\n        rows.push(cells);\n      }\n    });\n    let daysinmonth = rows.map((d, i) => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, d);\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.test,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"test\")), React.createElement(\"div\", {\n      className: \"tail-datetime-calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"calendar-navi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \" \", React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.month()), \" \")), React.createElement(\"div\", {\n      className: \"calendar-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"calendar-day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, weekdayshortname)), React.createElement(\"tbody\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, daysinmonth))));\n  }\n\n}\n\nexport default CalendarComponent;","map":{"version":3,"sources":["/Users/josefutleg/Desktop/code/app/fika/fika/client/src/pages/CalendarComponent.jsx"],"names":["React","Component","moment","CalendarComponent","weekdayshort","weekdaysShort","state","dateObject","allmonths","months","month","firstDayOfMonth","firstDay","startOf","format","daysInMonth","currentDay","year","MonthList","props","data","map","push","test","console","log","handleClick","e","persist","value","target","innerText","dataValue","attributes","dataday","componentDidMount","currentMonth","setState","render","weekdayshortname","day","blanks","i","d","totalSlots","rows","cells","forEach","row","length","daysinmonth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport \"./calendar.css\";\n\nclass CalendarComponent extends Component {\n  weekdayshort = moment.weekdaysShort();\n  // returns an array of all weekdays starting at sunday with index 0\n  state = {\n    dateObject: moment(),\n    allmonths: moment.months(),\n    month: \"\"\n  };\n\n  firstDayOfMonth = () => {\n    let dateObject = this.state.dateObject;\n    let firstDay = moment(dateObject)\n      .startOf(\"month\")\n      .format(\"d\");\n    return firstDay;\n  };\n  daysInMonth = () => {\n    return this.state.dateObject.daysInMonth();\n  };\n\n  currentDay = () => {\n    return this.state.dateObject.format(\"D\");\n  };\n\n  month = () => {\n    return this.state.dateObject.format(\"MMMM\");\n  };\n  year = () => {\n    return this.state.dateObject.format(\"Y\");\n  };\n\n  MonthList = props => {\n    let months = [];\n    props.data.map(data => {\n      months.push(\n        <td>\n          <span>{data}</span>\n        </td>\n      );\n    });\n  };\n\n  // \"D\" = day\n  // \"M\" = month in number, \"MMM\" = month in short (Nov), \"MMMM\" = month in long (November)\n  // \"Y\" = year\n  test = () => {\n    console.log(this.state.dateObject.format(\"MMM\"));\n  };\n\n  handleClick = e => {\n    e.persist();\n    let value = e.target.innerText;\n    let dataValue;\n    if (value == \"\") {\n      console.log(\"empty\");\n    } else {\n      dataValue = e.target.attributes.dataday.value;\n\n      console.log(dataValue);\n    }\n  };\n  componentDidMount() {\n    let currentMonth = this.month();\n    this.setState({ month: currentMonth });\n  }\n\n  render() {\n    let weekdayshortname = this.weekdayshort.map(day => {\n      return (\n        <th key={day} className=\"week-day\">\n          {day}\n        </th>\n      );\n    });\n    let blanks = [];\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push(<td className=\"calendar-day-empty\">{\"\"}</td>);\n    }\n    let daysInMonth = [];\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      let currentDay = d == this.currentDay() ? \"today\" : \"\";\n      daysInMonth.push(\n        <td key={d} className={`calendar-day-${currentDay}`} dataday={d}>\n          {d}\n        </td>\n      );\n    }\n    var totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n      if (i === totalSlots.length - 1) {\n        rows.push(cells);\n      }\n    });\n    let daysinmonth = rows.map((d, i) => {\n      return <tr>{d}</tr>;\n    });\n    return (\n      <React.Fragment>\n        <div>\n          <button onClick={this.test}>test</button>\n        </div>\n        <div className=\"tail-datetime-calendar\">\n          <div className=\"calendar-navi\">\n            {\" \"}\n            <h1>{this.month()}</h1>{\" \"}\n          </div>\n        </div>\n        <div className=\"calendar-date\">\n          <table className=\"calendar-day\">\n            <thead>\n              <tr>{weekdayshortname}</tr>\n            </thead>\n            <tbody onClick={this.handleClick}>{daysinmonth}</tbody>\n          </table>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CalendarComponent;\n"]},"metadata":{},"sourceType":"module"}