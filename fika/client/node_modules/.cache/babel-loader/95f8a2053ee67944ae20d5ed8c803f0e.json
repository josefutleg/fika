{"ast":null,"code":"var _jsxFileName = \"/Users/josefutleg/Desktop/code/app/fika/fika/client/src/tools/home.jsx\";\nimport React, { Component } from \"react\";\nimport \"../sidebar/sidebarStyle.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isExpanded: false,\n      isActive: false,\n      options: [{\n        option: \"View All\",\n        id: \"000\",\n        func: this.props.handleProjects,\n        isSolid: true\n      }, {\n        option: \"Project 1\",\n        id: \"001\",\n        func: this.props.viewProject\n      }, {\n        option: \"Project 2\",\n        id: \"002\",\n        func: this.props.viewProject\n      }, {\n        option: \"Project 3\",\n        id: \"003\",\n        func: this.props.viewProject\n      }]\n    };\n\n    this.handleClickOut = e => {\n      this.setState({\n        isExpanded: false\n      });\n      this.setState({\n        isActive: false\n      });\n    };\n\n    this.handleViewProjects = e => {\n      this.props.handleProjects(e);\n      this.setState({\n        isExpanded: false\n      });\n      this.setState({\n        isActive: false\n      });\n    };\n\n    this.handleViewProject = e => {\n      this.props.viewProject(e);\n      this.setState({\n        isExpanded: false\n      });\n      this.setState({\n        isActive: false\n      });\n    };\n\n    this.expand = e => {\n      if (this.node.contains(e.target)) {\n        if (this.state.isExpanded === false) {\n          this.setState({\n            isExpanded: true\n          });\n          this.setState({\n            isActive: true\n          });\n        }\n\n        return;\n      } else this.handleClickOut();\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.expand, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.expand, false);\n  }\n\n  render() {\n    const openDivStyle = {\n      width: \"120px\",\n      float: \"left\",\n      overflow: \"hidden\",\n      backgroundColor: \"lightgreen\"\n    };\n    const closeDivStyle = {\n      width: \"0px\",\n      display: \"none\"\n    };\n    const activeDivStyle = {\n      backgroundColor: \"lightgreen\"\n    };\n    const inactiveDivStyle = {\n      backgroundColor: \"lightsalmon\"\n    };\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"option\",\n      ref: node => this.node = node,\n      onClick: this.expand,\n      style: this.state.isActive ? activeDivStyle : inactiveDivStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"optionIcon\",\n      icon: faUser,\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"expandOptions\",\n      style: this.state.isExpanded ? openDivStyle : closeDivStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.options.map(x => React.createElement(\"p\", {\n      className: \"expandOption\",\n      key: x.id,\n      datavalue: x.id,\n      dataname: x.option,\n      onClick: x.isSolid ? this.handleViewProjects : this.handleViewProject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, x.option)))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/josefutleg/Desktop/code/app/fika/fika/client/src/tools/home.jsx"],"names":["React","Component","FontAwesomeIcon","faUser","Home","state","isExpanded","isActive","options","option","id","func","props","handleProjects","isSolid","viewProject","handleClickOut","e","setState","handleViewProjects","handleViewProject","expand","node","contains","target","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","openDivStyle","width","float","overflow","backgroundColor","closeDivStyle","display","activeDivStyle","inactiveDivStyle","map","x"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,6BAAP;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,mCAAvB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BI,KAD2B,GACnB;AACNC,MAAAA,UAAU,EAAE,KADN;AAENC,MAAAA,QAAQ,EAAE,KAFJ;AAGNC,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,MAAM,EAAE,UADV;AAEEC,QAAAA,EAAE,EAAE,KAFN;AAGEC,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,cAHnB;AAIEC,QAAAA,OAAO,EAAE;AAJX,OADO,EAOP;AAAEL,QAAAA,MAAM,EAAE,WAAV;AAAuBC,QAAAA,EAAE,EAAE,KAA3B;AAAkCC,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWG;AAAnD,OAPO,EAQP;AAAEN,QAAAA,MAAM,EAAE,WAAV;AAAuBC,QAAAA,EAAE,EAAE,KAA3B;AAAkCC,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWG;AAAnD,OARO,EASP;AAAEN,QAAAA,MAAM,EAAE,WAAV;AAAuBC,QAAAA,EAAE,EAAE,KAA3B;AAAkCC,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWG;AAAnD,OATO;AAHH,KADmB;;AAAA,SAuB3BC,cAvB2B,GAuBVC,CAAC,IAAI;AACpB,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,UAAU,EAAE;AAAd,OAAd;AACA,WAAKY,QAAL,CAAc;AAAEX,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KA1B0B;;AAAA,SA4B3BY,kBA5B2B,GA4BNF,CAAC,IAAI;AACxB,WAAKL,KAAL,CAAWC,cAAX,CAA0BI,CAA1B;AACA,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,UAAU,EAAE;AAAd,OAAd;AACA,WAAKY,QAAL,CAAc;AAAEX,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KAhC0B;;AAAA,SAkC3Ba,iBAlC2B,GAkCPH,CAAC,IAAI;AACvB,WAAKL,KAAL,CAAWG,WAAX,CAAuBE,CAAvB;AACA,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,UAAU,EAAE;AAAd,OAAd;AACA,WAAKY,QAAL,CAAc;AAAEX,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KAtC0B;;AAAA,SAwC3Bc,MAxC2B,GAwClBJ,CAAC,IAAI;AACZ,UAAI,KAAKK,IAAL,CAAUC,QAAV,CAAmBN,CAAC,CAACO,MAArB,CAAJ,EAAkC;AAChC,YAAI,KAAKnB,KAAL,CAAWC,UAAX,KAA0B,KAA9B,EAAqC;AACnC,eAAKY,QAAL,CAAc;AAAEZ,YAAAA,UAAU,EAAE;AAAd,WAAd;AACA,eAAKY,QAAL,CAAc;AAAEX,YAAAA,QAAQ,EAAE;AAAZ,WAAd;AACD;;AACD;AACD,OAND,MAMO,KAAKS,cAAL;AACR,KAhD0B;AAAA;;AAiB3BS,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,KAAKN,MAA5C,EAAoD,KAApD;AACD;;AACDO,EAAAA,oBAAoB,GAAG;AACrBF,IAAAA,QAAQ,CAACG,mBAAT,CAA6B,WAA7B,EAA0C,KAAKR,MAA/C,EAAuD,KAAvD;AACD;;AA2BDS,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,GAAG;AACnBC,MAAAA,KAAK,EAAE,OADY;AAEnBC,MAAAA,KAAK,EAAE,MAFY;AAGnBC,MAAAA,QAAQ,EAAE,QAHS;AAInBC,MAAAA,eAAe,EAAE;AAJE,KAArB;AAMA,UAAMC,aAAa,GAAG;AACpBJ,MAAAA,KAAK,EAAE,KADa;AAEpBK,MAAAA,OAAO,EAAE;AAFW,KAAtB;AAIA,UAAMC,cAAc,GAAG;AACrBH,MAAAA,eAAe,EAAE;AADI,KAAvB;AAGA,UAAMI,gBAAgB,GAAG;AACvBJ,MAAAA,eAAe,EAAE;AADM,KAAzB;AAGA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,GAAG,EAAEb,IAAI,IAAK,KAAKA,IAAL,GAAYA,IAF5B;AAGE,MAAA,OAAO,EAAE,KAAKD,MAHhB;AAIE,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWE,QAAX,GAAsB+B,cAAtB,GAAuCC,gBAJhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,YAA3B;AAAwC,MAAA,IAAI,EAAEpC,MAA9C;AAAsD,MAAA,IAAI,EAAC,IAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWC,UAAX,GAAwByB,YAAxB,GAAuCK,aAFhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,KAAK/B,KAAL,CAAWG,OAAX,CAAmBgC,GAAnB,CAAuBC,CAAC,IACvB;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,GAAG,EAAEA,CAAC,CAAC/B,EAFT;AAGE,MAAA,SAAS,EAAE+B,CAAC,CAAC/B,EAHf;AAIE,MAAA,QAAQ,EAAE+B,CAAC,CAAChC,MAJd;AAKE,MAAA,OAAO,EACLgC,CAAC,CAAC3B,OAAF,GAAY,KAAKK,kBAAjB,GAAsC,KAAKC,iBAN/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASGqB,CAAC,CAAChC,MATL,CADD,CAJH,CAPF,CADF,CADF;AA8BD;;AAhG0B;;AAmG7B,eAAeL,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../sidebar/sidebarStyle.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Home extends Component {\n  state = {\n    isExpanded: false,\n    isActive: false,\n    options: [\n      {\n        option: \"View All\",\n        id: \"000\",\n        func: this.props.handleProjects,\n        isSolid: true\n      },\n      { option: \"Project 1\", id: \"001\", func: this.props.viewProject },\n      { option: \"Project 2\", id: \"002\", func: this.props.viewProject },\n      { option: \"Project 3\", id: \"003\", func: this.props.viewProject }\n    ]\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.expand, false);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.expand, false);\n  }\n  handleClickOut = e => {\n    this.setState({ isExpanded: false });\n    this.setState({ isActive: false });\n  };\n\n  handleViewProjects = e => {\n    this.props.handleProjects(e);\n    this.setState({ isExpanded: false });\n    this.setState({ isActive: false });\n  };\n\n  handleViewProject = e => {\n    this.props.viewProject(e);\n    this.setState({ isExpanded: false });\n    this.setState({ isActive: false });\n  };\n\n  expand = e => {\n    if (this.node.contains(e.target)) {\n      if (this.state.isExpanded === false) {\n        this.setState({ isExpanded: true });\n        this.setState({ isActive: true });\n      }\n      return;\n    } else this.handleClickOut();\n  };\n  render() {\n    const openDivStyle = {\n      width: \"120px\",\n      float: \"left\",\n      overflow: \"hidden\",\n      backgroundColor: \"lightgreen\"\n    };\n    const closeDivStyle = {\n      width: \"0px\",\n      display: \"none\"\n    };\n    const activeDivStyle = {\n      backgroundColor: \"lightgreen\"\n    };\n    const inactiveDivStyle = {\n      backgroundColor: \"lightsalmon\"\n    };\n    return (\n      <React.Fragment>\n        <div\n          className=\"option\"\n          ref={node => (this.node = node)}\n          onClick={this.expand}\n          style={this.state.isActive ? activeDivStyle : inactiveDivStyle}\n        >\n          <FontAwesomeIcon className=\"optionIcon\" icon={faUser} size=\"lg\" />\n          <div\n            className=\"expandOptions\"\n            style={this.state.isExpanded ? openDivStyle : closeDivStyle}\n          >\n            {this.state.options.map(x => (\n              <p\n                className=\"expandOption\"\n                key={x.id}\n                datavalue={x.id}\n                dataname={x.option}\n                onClick={\n                  x.isSolid ? this.handleViewProjects : this.handleViewProject\n                }\n              >\n                {x.option}\n              </p>\n            ))}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}