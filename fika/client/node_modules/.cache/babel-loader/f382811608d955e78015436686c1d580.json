{"ast":null,"code":"var _jsxFileName = \"/Users/josefutleg/Desktop/code/app/fika/fika/client/src/tools/notes.jsx\";\nimport React, { Component } from \"react\";\nimport \"../sidebar/sidebarStyle.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStickyNote, faChevronDown, faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport CreateNote from \"./createNote\";\n\nclass Notes extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isExpanded: false,\n      isActive: false,\n      isQuickSelect: false,\n      search: null,\n      options: [{\n        option: \"View All\",\n        id: \"000\",\n        func: this.props.loadNotes,\n        isSolid: true\n      }, {\n        option: \"Write Note\",\n        id: \"001\",\n        func: this.props.viewProject\n      }],\n      quickNote: {\n        text: null,\n        date: \"today\" //get date once handleSubmit is clicked before posting to db\n\n      }\n    };\n\n    this.handleClickOut = e => {\n      this.setState({\n        isExpanded: false\n      });\n      this.setState({\n        isActive: false\n      });\n    };\n\n    this.handleViewNotes = e => {\n      this.props.loadNotes(e);\n      this.setState({\n        isExpanded: false\n      });\n      this.setState({\n        isActive: false\n      });\n    };\n\n    this.handleWriteNote = e => {\n      this.setState({\n        isQuickSelect: true\n      });\n      this.setState({\n        isExpanded: false\n      });\n    };\n\n    this.expand = e => {\n      if (this.node.contains(e.target)) {\n        if (this.state.isExpanded === false) {\n          this.setState({\n            isExpanded: true\n          });\n          this.setState({\n            isActive: true\n          });\n        }\n\n        return;\n      } else this.handleClickOut();\n    };\n\n    this.handleChange = e => {\n      let value = e.target.value;\n      this.setState({\n        quickNote: {\n          text: value\n        }\n      });\n    };\n\n    this.handleSubmit = () => {\n      //validate textfield further - if state contains \"/n\" or \"\" > DO NOT SUBMIT\n      if (this.state.quickNote.text) {\n        console.log(this.state.quickNote);\n      } else alert(\"write something!\");\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        quickNote: {\n          text: null\n        }\n      });\n      this.setState({\n        isQuickSelect: false\n      });\n    };\n\n    this.handleSearchInput = e => {\n      let value = e.target.value;\n      this.setState({\n        search: value\n      });\n    };\n\n    this.handleSearchOne = e => {\n      //validate further. no spaces allowed\n      // read state.search ; if value.length > 4 then search db and add response to state. will need an array\n      if (this.state.search) {\n        console.log(this.state.search);\n      } else alert(\"write something!\");\n    };\n\n    this.handleSearchAll = () => {\n      console.log(\"call to db. search all project names\");\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.expand, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.expand, false);\n  }\n\n  render() {\n    const openDivStyle = {\n      width: \"120px\",\n      float: \"left\",\n      backgroundColor: \"lightgreen\",\n      overflow: \"hidden\"\n    };\n    const closeDivStyle = {\n      width: \"0px\",\n      display: \"none\"\n    };\n    const activeDivStyle = {\n      backgroundColor: \"lightgreen\"\n    };\n    const inactiveDivStyle = {\n      backgroundColor: \"dimgrey\"\n    };\n    const inputStyle = {\n      position: \"relative\",\n      top: \"160px\"\n    };\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"option\",\n      ref: node => this.node = node,\n      onClick: this.expand,\n      style: this.state.isActive ? activeDivStyle : inactiveDivStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"optionIcon\",\n      icon: faStickyNote,\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"expandOptions\",\n      style: this.state.isExpanded ? openDivStyle : closeDivStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, this.state.options.map(x => React.createElement(\"p\", {\n      key: x.id,\n      className: \"expandOption\",\n      datavalue: x.id,\n      dataname: x.option,\n      onClick: x.isSolid ? this.handleViewNotes : this.handleWriteNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, x.option)))), this.state.isQuickSelect === true && React.createElement(CreateNote, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Notes;","map":{"version":3,"sources":["/Users/josefutleg/Desktop/code/app/fika/fika/client/src/tools/notes.jsx"],"names":["React","Component","FontAwesomeIcon","faStickyNote","faChevronDown","faSearch","CreateNote","Notes","state","isExpanded","isActive","isQuickSelect","search","options","option","id","func","props","loadNotes","isSolid","viewProject","quickNote","text","date","handleClickOut","e","setState","handleViewNotes","handleWriteNote","expand","node","contains","target","handleChange","value","handleSubmit","console","log","alert","handleCancel","handleSearchInput","handleSearchOne","handleSearchAll","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","openDivStyle","width","float","backgroundColor","overflow","closeDivStyle","display","activeDivStyle","inactiveDivStyle","inputStyle","position","top","map","x"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../sidebar/sidebarStyle.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faStickyNote,\n  faChevronDown,\n  faSearch\n} from \"@fortawesome/free-solid-svg-icons\";\nimport CreateNote from \"./createNote\";\n\nclass Notes extends Component {\n  state = {\n    isExpanded: false,\n    isActive: false,\n    isQuickSelect: false,\n    search: null,\n    options: [\n      {\n        option: \"View All\",\n        id: \"000\",\n        func: this.props.loadNotes,\n        isSolid: true\n      },\n      { option: \"Write Note\", id: \"001\", func: this.props.viewProject }\n    ],\n    quickNote: {\n      text: null,\n      date: \"today\"\n      //get date once handleSubmit is clicked before posting to db\n    }\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.expand, false);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.expand, false);\n  }\n  handleClickOut = e => {\n    this.setState({ isExpanded: false });\n    this.setState({ isActive: false });\n  };\n\n  handleViewNotes = e => {\n    this.props.loadNotes(e);\n    this.setState({ isExpanded: false });\n    this.setState({ isActive: false });\n  };\n\n  handleWriteNote = e => {\n    this.setState({ isQuickSelect: true });\n    this.setState({ isExpanded: false });\n  };\n\n  expand = e => {\n    if (this.node.contains(e.target)) {\n      if (this.state.isExpanded === false) {\n        this.setState({ isExpanded: true });\n        this.setState({ isActive: true });\n      }\n      return;\n    } else this.handleClickOut();\n  };\n\n  handleChange = e => {\n    let value = e.target.value;\n    this.setState({ quickNote: { text: value } });\n  };\n  handleSubmit = () => {\n    //validate textfield further - if state contains \"/n\" or \"\" > DO NOT SUBMIT\n    if (this.state.quickNote.text) {\n      console.log(this.state.quickNote);\n    } else alert(\"write something!\");\n  };\n  handleCancel = () => {\n    this.setState({ quickNote: { text: null } });\n    this.setState({ isQuickSelect: false });\n  };\n  //add to project functions\n  handleSearchInput = e => {\n    let value = e.target.value;\n    this.setState({ search: value });\n  };\n  handleSearchOne = e => {\n    //validate further. no spaces allowed\n    // read state.search ; if value.length > 4 then search db and add response to state. will need an array\n    if (this.state.search) {\n      console.log(this.state.search);\n    } else alert(\"write something!\");\n  };\n  handleSearchAll = () => {\n    console.log(\"call to db. search all project names\");\n  };\n\n  render() {\n    const openDivStyle = {\n      width: \"120px\",\n      float: \"left\",\n      backgroundColor: \"lightgreen\",\n      overflow: \"hidden\"\n    };\n    const closeDivStyle = {\n      width: \"0px\",\n      display: \"none\"\n    };\n    const activeDivStyle = {\n      backgroundColor: \"lightgreen\"\n    };\n    const inactiveDivStyle = {\n      backgroundColor: \"dimgrey\"\n    };\n    const inputStyle = {\n      position: \"relative\",\n      top: \"160px\"\n    };\n    return (\n      <React.Fragment>\n        <div\n          className=\"option\"\n          ref={node => (this.node = node)}\n          onClick={this.expand}\n          style={this.state.isActive ? activeDivStyle : inactiveDivStyle}\n        >\n          <FontAwesomeIcon\n            className=\"optionIcon\"\n            icon={faStickyNote}\n            size=\"lg\"\n          />\n          <div\n            className=\"expandOptions\"\n            style={this.state.isExpanded ? openDivStyle : closeDivStyle}\n          >\n            {this.state.options.map(x => (\n              <p\n                key={x.id}\n                className=\"expandOption\"\n                datavalue={x.id}\n                dataname={x.option}\n                onClick={\n                  x.isSolid ? this.handleViewNotes : this.handleWriteNote\n                }\n              >\n                {x.option}\n              </p>\n            ))}\n          </div>\n        </div>\n        {/* need function that will handle clickouts. \n        if form is partially filled quicknote will minimize so data will not be lost. \n        //if clickout detected and this.state.quickNote contains value */}\n        {this.state.isQuickSelect === true && <CreateNote />}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Notes;\n"]},"metadata":{},"sourceType":"module"}