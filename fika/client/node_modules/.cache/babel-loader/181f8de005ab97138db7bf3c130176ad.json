{"ast":null,"code":"var _jsxFileName = \"/Users/josefutleg/Desktop/code/app/fika/fika/client/src/tools/notes.jsx\";\nimport React, { Component } from \"react\";\nimport \"../sidebar/sidebarStyle.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStickyNote } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Notes extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isExpanded: false,\n      options: [{\n        option: \"View All\",\n        id: \"000\",\n        func: this.props.loadNotes,\n        isSolid: true\n      }, {\n        option: \"Write Note\",\n        id: \"001\",\n        func: this.props.viewProject\n      }]\n    };\n\n    this.expand = e => {\n      if (this.state.isExpanded === false) this.setState({\n        isExpanded: true\n      });else this.setState({\n        isExpanded: false\n      });\n    };\n  }\n\n  render() {\n    const openDivStyle = {\n      width: \"150px\",\n      paddingLeft: \"20px\",\n      float: \"left\",\n      overflow: \"hidden\"\n    };\n    const closeDivStyle = {\n      width: \"0px\",\n      display: \"none\"\n    };\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"optionIcon\",\n      icon: faStickyNote,\n      size: \"lg\",\n      onClick: this.expand,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: this.props.isExpanded ? openDivStyle : closeDivStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.options.map(x => React.createElement(\"p\", {\n      key: x.id,\n      className: \"expandOption\",\n      datavalue: x.id,\n      dataname: x.option,\n      onClick: x.isSolid ? x.func : this.props.viewProject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, x.option)))));\n  }\n\n}\n\nexport default Notes;","map":{"version":3,"sources":["/Users/josefutleg/Desktop/code/app/fika/fika/client/src/tools/notes.jsx"],"names":["React","Component","FontAwesomeIcon","faStickyNote","Notes","state","isExpanded","options","option","id","func","props","loadNotes","isSolid","viewProject","expand","e","setState","render","openDivStyle","width","paddingLeft","float","overflow","closeDivStyle","display","map","x"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,6BAAP;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,YAAT,QAA6B,mCAA7B;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BI,KAD4B,GACpB;AACNC,MAAAA,UAAU,EAAE,KADN;AAENC,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,MAAM,EAAE,UADV;AAEEC,QAAAA,EAAE,EAAE,KAFN;AAGEC,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,SAHnB;AAIEC,QAAAA,OAAO,EAAE;AAJX,OADO,EAOP;AAAEL,QAAAA,MAAM,EAAE,YAAV;AAAwBC,QAAAA,EAAE,EAAE,KAA5B;AAAmCC,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWG;AAApD,OAPO;AAFH,KADoB;;AAAA,SAc5BC,MAd4B,GAcnBC,CAAC,IAAI;AACZ,UAAI,KAAKX,KAAL,CAAWC,UAAX,KAA0B,KAA9B,EAAqC,KAAKW,QAAL,CAAc;AAAEX,QAAAA,UAAU,EAAE;AAAd,OAAd,EAArC,KACK,KAAKW,QAAL,CAAc;AAAEX,QAAAA,UAAU,EAAE;AAAd,OAAd;AACN,KAjB2B;AAAA;;AAmB5BY,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,GAAG;AACnBC,MAAAA,KAAK,EAAE,OADY;AAEnBC,MAAAA,WAAW,EAAE,MAFM;AAGnBC,MAAAA,KAAK,EAAE,MAHY;AAInBC,MAAAA,QAAQ,EAAE;AAJS,KAArB;AAMA,UAAMC,aAAa,GAAG;AACpBJ,MAAAA,KAAK,EAAE,KADa;AAEpBK,MAAAA,OAAO,EAAE;AAFW,KAAtB;AAIA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,IAAI,EAAEtB,YAFR;AAGE,MAAA,IAAI,EAAC,IAHP;AAIE,MAAA,OAAO,EAAE,KAAKY,MAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AAAK,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWL,UAAX,GAAwBa,YAAxB,GAAuCK,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKnB,KAAL,CAAWE,OAAX,CAAmBmB,GAAnB,CAAuBC,CAAC,IACvB;AACE,MAAA,GAAG,EAAEA,CAAC,CAAClB,EADT;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,SAAS,EAAEkB,CAAC,CAAClB,EAHf;AAIE,MAAA,QAAQ,EAAEkB,CAAC,CAACnB,MAJd;AAKE,MAAA,OAAO,EAAEmB,CAAC,CAACd,OAAF,GAAYc,CAAC,CAACjB,IAAd,GAAqB,KAAKC,KAAL,CAAWG,WAL3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGa,CAAC,CAACnB,MAPL,CADD,CADH,CAPF,CADF,CADF;AAyBD;;AAvD2B;;AA0D9B,eAAeJ,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../sidebar/sidebarStyle.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStickyNote } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Notes extends Component {\n  state = {\n    isExpanded: false,\n    options: [\n      {\n        option: \"View All\",\n        id: \"000\",\n        func: this.props.loadNotes,\n        isSolid: true\n      },\n      { option: \"Write Note\", id: \"001\", func: this.props.viewProject }\n    ]\n  };\n\n  expand = e => {\n    if (this.state.isExpanded === false) this.setState({ isExpanded: true });\n    else this.setState({ isExpanded: false });\n  };\n\n  render() {\n    const openDivStyle = {\n      width: \"150px\",\n      paddingLeft: \"20px\",\n      float: \"left\",\n      overflow: \"hidden\"\n    };\n    const closeDivStyle = {\n      width: \"0px\",\n      display: \"none\"\n    };\n    return (\n      <React.Fragment>\n        <div className=\"option\">\n          <FontAwesomeIcon\n            className=\"optionIcon\"\n            icon={faStickyNote}\n            size=\"lg\"\n            onClick={this.expand}\n          />\n          <div style={this.props.isExpanded ? openDivStyle : closeDivStyle}>\n            {this.state.options.map(x => (\n              <p\n                key={x.id}\n                className=\"expandOption\"\n                datavalue={x.id}\n                dataname={x.option}\n                onClick={x.isSolid ? x.func : this.props.viewProject}\n              >\n                {x.option}\n              </p>\n            ))}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Notes;\n"]},"metadata":{},"sourceType":"module"}