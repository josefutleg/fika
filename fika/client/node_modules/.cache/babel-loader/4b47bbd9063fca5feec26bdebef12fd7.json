{"ast":null,"code":"var _jsxFileName = \"/Users/josefutleg/Desktop/projects/fika/fika/client/src/pages/CalendarComponent.jsx\";\nimport React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./calendar.css\";\n\nclass CalendarComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.weekdayshort = moment.weekdaysShort();\n    this.state = {\n      dateObject: moment(),\n      allmonths: moment.months(),\n      month: \"\",\n      year: null,\n      showMonths: false,\n      showYears: false\n    };\n\n    this.firstDayOfMonth = () => {\n      let dateObject = this.state.dateObject;\n      let firstDay = moment(dateObject).startOf(\"month\").format(\"d\");\n      return firstDay;\n    };\n\n    this.daysInMonth = () => {\n      return this.state.dateObject.daysInMonth();\n    };\n\n    this.currentDay = () => {\n      return this.state.dateObject.format(\"D\");\n    };\n\n    this.month = () => {\n      let month = this.state.dateObject.format(\"MMMM\");\n      return month;\n    };\n\n    this.year = () => {\n      return this.state.dateObject.format(\"Y\");\n    };\n\n    this.setMonth = month => {\n      let monthNo = this.state.allmonths.indexOf(month);\n      let dateObject = Object.assign({}, this.state.dateObject);\n      dateObject = moment(dateObject).set(\"month\", monthNo);\n      this.setState({\n        dateObject: dateObject,\n        showMonths: !this.state.showMonths\n      });\n    };\n\n    this.MonthList = props => {\n      let months = [];\n      let rows = [];\n      let cells = [];\n      props.data.map(data => {\n        months.push(React.createElement(\"td\", {\n          key: data,\n          className: data == this.state.month ? \"month-span-current\" : \"month-span\",\n          onClick: e => this.setMonth(data),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, data)));\n      });\n      months.forEach((row, i) => {\n        if (i % 3 !== 0 || i == 0) {\n          cells.push(row);\n        } else {\n          rows.push(cells);\n          cells = [];\n          cells.push(row);\n        }\n      });\n      rows.push(cells);\n      let monthlist = rows.map((d, i) => {\n        return React.createElement(\"tr\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, d);\n      });\n      return React.createElement(\"table\", {\n        className: \"calendar-month\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        colSpan: \"4\",\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Select a Month\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, monthlist));\n    };\n\n    this.showMonths = () => {\n      if (this.state.showMonths === false) {\n        this.setState({\n          showMonths: true\n        });\n      } else this.setState({\n        showMonths: false\n      });\n    };\n\n    this.YearTable = props => {\n      let months = [];\n      let nexttwelve = moment().set(\"year\", props).add(12, \"year\").format(\"Y\");\n      let twelveyears = this.getDates(props, nexttwelve);\n      twelveyears.map(data => {\n        months.push(React.createElement(\"td\", {\n          key: data,\n          className: data == this.state.year ? \"year-span-current\" : \"year-span\",\n          onClick: e => {\n            this.setYear(data);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, data)));\n      });\n      let rows = [];\n      let cells = [];\n      months.forEach((row, i) => {\n        if (i % 3 !== 0 || i == 0) {\n          cells.push(row);\n        } else {\n          rows.push(cells);\n          cells = [];\n          cells.push(row);\n        }\n      });\n      rows.push(cells);\n      let yearlist = rows.map((d, i) => {\n        return React.createElement(\"tr\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, d);\n      });\n      return React.createElement(\"table\", {\n        className: \"calendar-year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        colSpan: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Select Year\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, yearlist));\n    };\n\n    this.setYear = year => {\n      // alert(year)\n      let dateObject = Object.assign({}, this.state.dateObject);\n      dateObject = moment(dateObject).set(\"year\", year);\n      this.setState({\n        dateObject: dateObject,\n        showYears: !this.state.showYears\n      });\n    };\n\n    this.showYears = () => {\n      if (this.state.showYears === false) {\n        this.setState({\n          showYears: true\n        });\n      } else this.setState({\n        showYears: false\n      });\n    };\n\n    this.test = () => {\n      console.log(this.state.dateObject.format(\"MMM\"));\n    };\n\n    this.handleClick = e => {\n      e.persist();\n      let value = e.target.innerText;\n      let dataValue;\n\n      if (value == \"\") {\n        console.log(\"empty\");\n        this.setState({\n          showMonths: false,\n          showYears: false\n        });\n      } else {\n        this.setState({\n          showMonths: false,\n          showYears: false\n        });\n        let currentMonth = this.month();\n        let currentYear = this.year();\n        dataValue = e.target.attributes.dataday.value;\n        console.log(\"\".concat(currentMonth, \" \").concat(dataValue, \" \").concat(currentYear));\n      }\n    };\n\n    this.handleDecrease = e => {\n      this.setState({\n        dateObject: this.state.dateObject.subtract(1, \"month\")\n      });\n    };\n\n    this.handleIncrease = e => {\n      this.setState({\n        dateObject: this.state.dateObject.add(1, \"month\")\n      });\n    };\n  }\n\n  getDates(startDate, stopDate) {\n    var dateArray = [];\n    var currentDate = moment(startDate);\n    var stopDate = moment(stopDate);\n\n    while (currentDate <= stopDate) {\n      dateArray.push(moment(currentDate).format(\"YYYY\"));\n      currentDate = moment(currentDate).add(1, \"year\");\n    }\n\n    return dateArray;\n  }\n\n  componentDidMount() {\n    let currentMonth = this.month();\n    let currentYear = this.year();\n    this.setState({\n      month: currentMonth,\n      year: currentYear\n    });\n  }\n\n  render() {\n    let weekdayshortname = this.weekdayshort.map(day => {\n      return React.createElement(\"th\", {\n        key: day,\n        className: \"week-day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, day);\n    });\n    let blanks = [];\n\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push(React.createElement(\"td\", {\n        key: \"empty\".concat(i),\n        className: \"calendar-day-empty\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"\"));\n    }\n\n    let daysInMonth = [];\n\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      let currentDay = d == this.currentDay() ? \"today\" : \"\";\n      daysInMonth.push(React.createElement(\"td\", {\n        key: d,\n        className: \"calendar-day-\".concat(currentDay),\n        dataday: d,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, d));\n    }\n\n    var totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n\n      if (i === totalSlots.length - 1) {\n        rows.push(cells);\n      }\n    });\n    let daysinmonth = rows.map((d, i) => {\n      return React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, d);\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tail-datetime-calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"calendar-navi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \" \", React.createElement(\"span\", {\n      style: {\n        float: \"left\",\n        paddingTop: \"22px\"\n      },\n      onClick: this.handleDecrease,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faChevronLeft,\n      size: \"2x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      onClick: this.showMonths,\n      className: \"calendar-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, this.month()), \" \", React.createElement(\"span\", {\n      onClick: this.showYears,\n      className: \"calendar-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, this.year()), React.createElement(\"span\", {\n      style: {\n        float: \"right\",\n        paddingTop: \"22px\"\n      },\n      onClick: this.handleIncrease,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faChevronRight,\n      size: \"2x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"calendar-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, this.state.showYears === true && React.createElement(this.YearTable, {\n      props: this.year(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), this.state.showMonths === true && React.createElement(this.MonthList, {\n      data: moment.months(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"calendar-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"calendar-day\",\n      onClick: () => {\n        this.setState({\n          showMonths: false,\n          showYears: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, weekdayshortname)), React.createElement(\"tbody\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, daysinmonth))));\n  }\n\n}\n\nexport default CalendarComponent;","map":{"version":3,"sources":["/Users/josefutleg/Desktop/projects/fika/fika/client/src/pages/CalendarComponent.jsx"],"names":["React","Component","moment","FontAwesomeIcon","faChevronLeft","faChevronRight","CalendarComponent","weekdayshort","weekdaysShort","state","dateObject","allmonths","months","month","year","showMonths","showYears","firstDayOfMonth","firstDay","startOf","format","daysInMonth","currentDay","setMonth","monthNo","indexOf","Object","assign","set","setState","MonthList","props","rows","cells","data","map","push","e","forEach","row","i","monthlist","d","textAlign","YearTable","nexttwelve","add","twelveyears","getDates","setYear","yearlist","test","console","log","handleClick","persist","value","target","innerText","dataValue","currentMonth","currentYear","attributes","dataday","handleDecrease","subtract","handleIncrease","startDate","stopDate","dateArray","currentDate","componentDidMount","render","weekdayshortname","day","blanks","totalSlots","length","daysinmonth","float","paddingTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACEC,aADF,EAEEC,cAFF,QAGO,mCAHP;AAIA,OAAO,gBAAP;;AAEA,MAAMC,iBAAN,SAAgCL,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCM,YADwC,GACzBL,MAAM,CAACM,aAAP,EADyB;AAAA,SAGxCC,KAHwC,GAGhC;AACNC,MAAAA,UAAU,EAAER,MAAM,EADZ;AAENS,MAAAA,SAAS,EAAET,MAAM,CAACU,MAAP,EAFL;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,IAAI,EAAE,IAJA;AAKNC,MAAAA,UAAU,EAAE,KALN;AAMNC,MAAAA,SAAS,EAAE;AANL,KAHgC;;AAAA,SAYxCC,eAZwC,GAYtB,MAAM;AACtB,UAAIP,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA5B;AACA,UAAIQ,QAAQ,GAAGhB,MAAM,CAACQ,UAAD,CAAN,CACZS,OADY,CACJ,OADI,EAEZC,MAFY,CAEL,GAFK,CAAf;AAGA,aAAOF,QAAP;AACD,KAlBuC;;AAAA,SAmBxCG,WAnBwC,GAmB1B,MAAM;AAClB,aAAO,KAAKZ,KAAL,CAAWC,UAAX,CAAsBW,WAAtB,EAAP;AACD,KArBuC;;AAAA,SAuBxCC,UAvBwC,GAuB3B,MAAM;AACjB,aAAO,KAAKb,KAAL,CAAWC,UAAX,CAAsBU,MAAtB,CAA6B,GAA7B,CAAP;AACD,KAzBuC;;AAAA,SA2BxCP,KA3BwC,GA2BhC,MAAM;AACZ,UAAIA,KAAK,GAAG,KAAKJ,KAAL,CAAWC,UAAX,CAAsBU,MAAtB,CAA6B,MAA7B,CAAZ;AACA,aAAOP,KAAP;AACD,KA9BuC;;AAAA,SA+BxCC,IA/BwC,GA+BjC,MAAM;AACX,aAAO,KAAKL,KAAL,CAAWC,UAAX,CAAsBU,MAAtB,CAA6B,GAA7B,CAAP;AACD,KAjCuC;;AAAA,SAkCxCG,QAlCwC,GAkC7BV,KAAK,IAAI;AAClB,UAAIW,OAAO,GAAG,KAAKf,KAAL,CAAWE,SAAX,CAAqBc,OAArB,CAA6BZ,KAA7B,CAAd;AACA,UAAIH,UAAU,GAAGgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKlB,KAAL,CAAWC,UAA7B,CAAjB;AACAA,MAAAA,UAAU,GAAGR,MAAM,CAACQ,UAAD,CAAN,CAAmBkB,GAAnB,CAAuB,OAAvB,EAAgCJ,OAAhC,CAAb;AACA,WAAKK,QAAL,CAAc;AACZnB,QAAAA,UAAU,EAAEA,UADA;AAEZK,QAAAA,UAAU,EAAE,CAAC,KAAKN,KAAL,CAAWM;AAFZ,OAAd;AAID,KA1CuC;;AAAA,SA4CxCe,SA5CwC,GA4C5BC,KAAK,IAAI;AACnB,UAAInB,MAAM,GAAG,EAAb;AACA,UAAIoB,IAAI,GAAG,EAAX;AACA,UAAIC,KAAK,GAAG,EAAZ;AACAF,MAAAA,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAeD,IAAI,IAAI;AACrBtB,QAAAA,MAAM,CAACwB,IAAP,CACE;AACE,UAAA,GAAG,EAAEF,IADP;AAEE,UAAA,SAAS,EACPA,IAAI,IAAI,KAAKzB,KAAL,CAAWI,KAAnB,GAA2B,oBAA3B,GAAkD,YAHtD;AAKE,UAAA,OAAO,EAAEwB,CAAC,IAAI,KAAKd,QAAL,CAAcW,IAAd,CALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOA,IAAP,CAPF,CADF;AAWD,OAZD;AAaAtB,MAAAA,MAAM,CAAC0B,OAAP,CAAe,CAACC,GAAD,EAAMC,CAAN,KAAY;AACzB,YAAIA,CAAC,GAAG,CAAJ,KAAU,CAAV,IAAeA,CAAC,IAAI,CAAxB,EAA2B;AACzBP,UAAAA,KAAK,CAACG,IAAN,CAAWG,GAAX;AACD,SAFD,MAEO;AACLP,UAAAA,IAAI,CAACI,IAAL,CAAUH,KAAV;AACAA,UAAAA,KAAK,GAAG,EAAR;AACAA,UAAAA,KAAK,CAACG,IAAN,CAAWG,GAAX;AACD;AACF,OARD;AASAP,MAAAA,IAAI,CAACI,IAAL,CAAUH,KAAV;AACA,UAAIQ,SAAS,GAAGT,IAAI,CAACG,GAAL,CAAS,CAACO,CAAD,EAAIF,CAAJ,KAAU;AACjC,eAAO;AAAI,UAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaE,CAAb,CAAP;AACD,OAFe,CAAhB;AAGA,aACE;AAAO,QAAA,SAAS,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAgB,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQF,SAAR,CARF,CADF;AAYD,KAtFuC;;AAAA,SAwFxC1B,UAxFwC,GAwF3B,MAAM;AACjB,UAAI,KAAKN,KAAL,CAAWM,UAAX,KAA0B,KAA9B,EAAqC;AACnC,aAAKc,QAAL,CAAc;AAAEd,UAAAA,UAAU,EAAE;AAAd,SAAd;AACD,OAFD,MAEO,KAAKc,QAAL,CAAc;AAAEd,QAAAA,UAAU,EAAE;AAAd,OAAd;AACR,KA5FuC;;AAAA,SAyGxC6B,SAzGwC,GAyG5Bb,KAAK,IAAI;AACnB,UAAInB,MAAM,GAAG,EAAb;AACA,UAAIiC,UAAU,GAAG3C,MAAM,GACpB0B,GADc,CACV,MADU,EACFG,KADE,EAEde,GAFc,CAEV,EAFU,EAEN,MAFM,EAGd1B,MAHc,CAGP,GAHO,CAAjB;AAIA,UAAI2B,WAAW,GAAG,KAAKC,QAAL,CAAcjB,KAAd,EAAqBc,UAArB,CAAlB;AACAE,MAAAA,WAAW,CAACZ,GAAZ,CAAgBD,IAAI,IAAI;AACtBtB,QAAAA,MAAM,CAACwB,IAAP,CACE;AACE,UAAA,GAAG,EAAEF,IADP;AAEE,UAAA,SAAS,EACPA,IAAI,IAAI,KAAKzB,KAAL,CAAWK,IAAnB,GAA0B,mBAA1B,GAAgD,WAHpD;AAKE,UAAA,OAAO,EAAEuB,CAAC,IAAI;AACZ,iBAAKY,OAAL,CAAaf,IAAb;AACD,WAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOA,IAAP,CATF,CADF;AAaD,OAdD;AAeA,UAAIF,IAAI,GAAG,EAAX;AACA,UAAIC,KAAK,GAAG,EAAZ;AAEArB,MAAAA,MAAM,CAAC0B,OAAP,CAAe,CAACC,GAAD,EAAMC,CAAN,KAAY;AACzB,YAAIA,CAAC,GAAG,CAAJ,KAAU,CAAV,IAAeA,CAAC,IAAI,CAAxB,EAA2B;AACzBP,UAAAA,KAAK,CAACG,IAAN,CAAWG,GAAX;AACD,SAFD,MAEO;AACLP,UAAAA,IAAI,CAACI,IAAL,CAAUH,KAAV;AACAA,UAAAA,KAAK,GAAG,EAAR;AACAA,UAAAA,KAAK,CAACG,IAAN,CAAWG,GAAX;AACD;AACF,OARD;AASAP,MAAAA,IAAI,CAACI,IAAL,CAAUH,KAAV;AACA,UAAIiB,QAAQ,GAAGlB,IAAI,CAACG,GAAL,CAAS,CAACO,CAAD,EAAIF,CAAJ,KAAU;AAChC,eAAO;AAAI,UAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaE,CAAb,CAAP;AACD,OAFc,CAAf;AAGA,aACE;AAAO,QAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQQ,QAAR,CANF,CADF;AAUD,KAzJuC;;AAAA,SA0JxCD,OA1JwC,GA0J9BnC,IAAI,IAAI;AAChB;AACA,UAAIJ,UAAU,GAAGgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKlB,KAAL,CAAWC,UAA7B,CAAjB;AACAA,MAAAA,UAAU,GAAGR,MAAM,CAACQ,UAAD,CAAN,CAAmBkB,GAAnB,CAAuB,MAAvB,EAA+Bd,IAA/B,CAAb;AACA,WAAKe,QAAL,CAAc;AACZnB,QAAAA,UAAU,EAAEA,UADA;AAEZM,QAAAA,SAAS,EAAE,CAAC,KAAKP,KAAL,CAAWO;AAFX,OAAd;AAID,KAlKuC;;AAAA,SAoKxCA,SApKwC,GAoK5B,MAAM;AAChB,UAAI,KAAKP,KAAL,CAAWO,SAAX,KAAyB,KAA7B,EAAoC;AAClC,aAAKa,QAAL,CAAc;AAAEb,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD,OAFD,MAEO,KAAKa,QAAL,CAAc;AAAEb,QAAAA,SAAS,EAAE;AAAb,OAAd;AACR,KAxKuC;;AAAA,SA4KxCmC,IA5KwC,GA4KjC,MAAM;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK5C,KAAL,CAAWC,UAAX,CAAsBU,MAAtB,CAA6B,KAA7B,CAAZ;AACD,KA9KuC;;AAAA,SAgLxCkC,WAhLwC,GAgL1BjB,CAAC,IAAI;AACjBA,MAAAA,CAAC,CAACkB,OAAF;AACA,UAAIC,KAAK,GAAGnB,CAAC,CAACoB,MAAF,CAASC,SAArB;AACA,UAAIC,SAAJ;;AACA,UAAIH,KAAK,IAAI,EAAb,EAAiB;AACfJ,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,aAAKxB,QAAL,CAAc;AACZd,UAAAA,UAAU,EAAE,KADA;AAEZC,UAAAA,SAAS,EAAE;AAFC,SAAd;AAID,OAND,MAMO;AACL,aAAKa,QAAL,CAAc;AACZd,UAAAA,UAAU,EAAE,KADA;AAEZC,UAAAA,SAAS,EAAE;AAFC,SAAd;AAIA,YAAI4C,YAAY,GAAG,KAAK/C,KAAL,EAAnB;AACA,YAAIgD,WAAW,GAAG,KAAK/C,IAAL,EAAlB;AACA6C,QAAAA,SAAS,GAAGtB,CAAC,CAACoB,MAAF,CAASK,UAAT,CAAoBC,OAApB,CAA4BP,KAAxC;AAEAJ,QAAAA,OAAO,CAACC,GAAR,WAAeO,YAAf,cAA+BD,SAA/B,cAA4CE,WAA5C;AACD;AACF,KArMuC;;AAAA,SAuMxCG,cAvMwC,GAuMvB3B,CAAC,IAAI;AACpB,WAAKR,QAAL,CAAc;AAAEnB,QAAAA,UAAU,EAAE,KAAKD,KAAL,CAAWC,UAAX,CAAsBuD,QAAtB,CAA+B,CAA/B,EAAkC,OAAlC;AAAd,OAAd;AACD,KAzMuC;;AAAA,SA0MxCC,cA1MwC,GA0MvB7B,CAAC,IAAI;AACpB,WAAKR,QAAL,CAAc;AAAEnB,QAAAA,UAAU,EAAE,KAAKD,KAAL,CAAWC,UAAX,CAAsBoC,GAAtB,CAA0B,CAA1B,EAA6B,OAA7B;AAAd,OAAd;AACD,KA5MuC;AAAA;;AA8FxCE,EAAAA,QAAQ,CAACmB,SAAD,EAAYC,QAAZ,EAAsB;AAC5B,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,WAAW,GAAGpE,MAAM,CAACiE,SAAD,CAAxB;AACA,QAAIC,QAAQ,GAAGlE,MAAM,CAACkE,QAAD,CAArB;;AACA,WAAOE,WAAW,IAAIF,QAAtB,EAAgC;AAC9BC,MAAAA,SAAS,CAACjC,IAAV,CAAelC,MAAM,CAACoE,WAAD,CAAN,CAAoBlD,MAApB,CAA2B,MAA3B,CAAf;AACAkD,MAAAA,WAAW,GAAGpE,MAAM,CAACoE,WAAD,CAAN,CAAoBxB,GAApB,CAAwB,CAAxB,EAA2B,MAA3B,CAAd;AACD;;AACD,WAAOuB,SAAP;AACD;;AAsGDE,EAAAA,iBAAiB,GAAG;AAClB,QAAIX,YAAY,GAAG,KAAK/C,KAAL,EAAnB;AACA,QAAIgD,WAAW,GAAG,KAAK/C,IAAL,EAAlB;AACA,SAAKe,QAAL,CAAc;AAAEhB,MAAAA,KAAK,EAAE+C,YAAT;AAAuB9C,MAAAA,IAAI,EAAE+C;AAA7B,KAAd;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP,QAAIC,gBAAgB,GAAG,KAAKlE,YAAL,CAAkB4B,GAAlB,CAAsBuC,GAAG,IAAI;AAClD,aACE;AAAI,QAAA,GAAG,EAAEA,GAAT;AAAc,QAAA,SAAS,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,GADH,CADF;AAKD,KANsB,CAAvB;AAOA,QAAIC,MAAM,GAAG,EAAb;;AACA,SAAK,IAAInC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKvB,eAAL,EAApB,EAA4CuB,CAAC,EAA7C,EAAiD;AAC/CmC,MAAAA,MAAM,CAACvC,IAAP,CACE;AAAI,QAAA,GAAG,iBAAUI,CAAV,CAAP;AAAsB,QAAA,SAAS,EAAC,oBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,EADH,CADF;AAKD;;AACD,QAAInB,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAIqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,KAAKrB,WAAL,EAArB,EAAyCqB,CAAC,EAA1C,EAA8C;AAC5C,UAAIpB,UAAU,GAAGoB,CAAC,IAAI,KAAKpB,UAAL,EAAL,GAAyB,OAAzB,GAAmC,EAApD;AACAD,MAAAA,WAAW,CAACe,IAAZ,CACE;AAAI,QAAA,GAAG,EAAEM,CAAT;AAAY,QAAA,SAAS,yBAAkBpB,UAAlB,CAArB;AAAqD,QAAA,OAAO,EAAEoB,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,CADH,CADF;AAKD;;AACD,QAAIkC,UAAU,GAAG,CAAC,GAAGD,MAAJ,EAAY,GAAGtD,WAAf,CAAjB;AACA,QAAIW,IAAI,GAAG,EAAX;AACA,QAAIC,KAAK,GAAG,EAAZ;AACA2C,IAAAA,UAAU,CAACtC,OAAX,CAAmB,CAACC,GAAD,EAAMC,CAAN,KAAY;AAC7B,UAAIA,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiB;AACfP,QAAAA,KAAK,CAACG,IAAN,CAAWG,GAAX;AACD,OAFD,MAEO;AACLP,QAAAA,IAAI,CAACI,IAAL,CAAUH,KAAV;AACAA,QAAAA,KAAK,GAAG,EAAR;AACAA,QAAAA,KAAK,CAACG,IAAN,CAAWG,GAAX;AACD;;AACD,UAAIC,CAAC,KAAKoC,UAAU,CAACC,MAAX,GAAoB,CAA9B,EAAiC;AAC/B7C,QAAAA,IAAI,CAACI,IAAL,CAAUH,KAAV;AACD;AACF,KAXD;AAYA,QAAI6C,WAAW,GAAG9C,IAAI,CAACG,GAAL,CAAS,CAACO,CAAD,EAAIF,CAAJ,KAAU;AACnC,aAAO;AAAI,QAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaE,CAAb,CAAP;AACD,KAFiB,CAAlB;AAGA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEE;AACE,MAAA,KAAK,EAAE;AAAEqC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,UAAU,EAAE;AAA7B,OADT;AAEE,MAAA,OAAO,EAAE,KAAKhB,cAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE5D,aAAvB;AAAsC,MAAA,IAAI,EAAC,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAFF,EAQE;AAAM,MAAA,OAAO,EAAE,KAAKW,UAApB;AAAgC,MAAA,SAAS,EAAC,iBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,EADH,CARF,EAUU,GAVV,EAWE;AAAM,MAAA,OAAO,EAAE,KAAKG,SAApB;AAA+B,MAAA,SAAS,EAAC,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,IAAL,EADH,CAXF,EAcE;AACE,MAAA,KAAK,EAAE;AAAEiE,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,UAAU,EAAE;AAA9B,OADT;AAEE,MAAA,OAAO,EAAE,KAAKd,cAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE7D,cAAvB;AAAuC,MAAA,IAAI,EAAC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAdF,CADF,CAJF,EA2BE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKI,KAAL,CAAWO,SAAX,KAAyB,IAAzB,IACC,yBAAM,SAAN;AAAgB,MAAA,KAAK,EAAE,KAAKF,IAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAIG,KAAKL,KAAL,CAAWM,UAAX,KAA0B,IAA1B,IACC,yBAAM,SAAN;AAAgB,MAAA,IAAI,EAAEb,MAAM,CAACU,MAAP,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CA3BF,EAoCE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKiB,QAAL,CAAc;AACZd,UAAAA,UAAU,EAAE,KADA;AAEZC,UAAAA,SAAS,EAAE;AAFC,SAAd;AAID,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKyD,gBAAL,CADF,CATF,EAYE;AAAO,MAAA,OAAO,EAAE,KAAKnB,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCwB,WAAnC,CAZF,CADF,CApCF,CADF;AAuDD;;AArTuC;;AAwT1C,eAAexE,iBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronLeft,\n  faChevronRight\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./calendar.css\";\n\nclass CalendarComponent extends Component {\n  weekdayshort = moment.weekdaysShort();\n  // returns an array of all weekdays starting at sunday with index 0\n  state = {\n    dateObject: moment(),\n    allmonths: moment.months(),\n    month: \"\",\n    year: null,\n    showMonths: false,\n    showYears: false\n  };\n\n  firstDayOfMonth = () => {\n    let dateObject = this.state.dateObject;\n    let firstDay = moment(dateObject)\n      .startOf(\"month\")\n      .format(\"d\");\n    return firstDay;\n  };\n  daysInMonth = () => {\n    return this.state.dateObject.daysInMonth();\n  };\n\n  currentDay = () => {\n    return this.state.dateObject.format(\"D\");\n  };\n\n  month = () => {\n    let month = this.state.dateObject.format(\"MMMM\");\n    return month;\n  };\n  year = () => {\n    return this.state.dateObject.format(\"Y\");\n  };\n  setMonth = month => {\n    let monthNo = this.state.allmonths.indexOf(month);\n    let dateObject = Object.assign({}, this.state.dateObject);\n    dateObject = moment(dateObject).set(\"month\", monthNo);\n    this.setState({\n      dateObject: dateObject,\n      showMonths: !this.state.showMonths\n    });\n  };\n\n  MonthList = props => {\n    let months = [];\n    let rows = [];\n    let cells = [];\n    props.data.map(data => {\n      months.push(\n        <td\n          key={data}\n          className={\n            data == this.state.month ? \"month-span-current\" : \"month-span\"\n          }\n          onClick={e => this.setMonth(data)}\n        >\n          <span>{data}</span>\n        </td>\n      );\n    });\n    months.forEach((row, i) => {\n      if (i % 3 !== 0 || i == 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n    });\n    rows.push(cells);\n    let monthlist = rows.map((d, i) => {\n      return <tr key={i}>{d}</tr>;\n    });\n    return (\n      <table className=\"calendar-month\">\n        <thead>\n          <tr>\n            <th colSpan=\"4\" style={{ textAlign: \"center\" }}>\n              Select a Month\n            </th>\n          </tr>\n        </thead>\n        <tbody>{monthlist}</tbody>\n      </table>\n    );\n  };\n\n  showMonths = () => {\n    if (this.state.showMonths === false) {\n      this.setState({ showMonths: true });\n    } else this.setState({ showMonths: false });\n  };\n\n  getDates(startDate, stopDate) {\n    var dateArray = [];\n    var currentDate = moment(startDate);\n    var stopDate = moment(stopDate);\n    while (currentDate <= stopDate) {\n      dateArray.push(moment(currentDate).format(\"YYYY\"));\n      currentDate = moment(currentDate).add(1, \"year\");\n    }\n    return dateArray;\n  }\n\n  YearTable = props => {\n    let months = [];\n    let nexttwelve = moment()\n      .set(\"year\", props)\n      .add(12, \"year\")\n      .format(\"Y\");\n    let twelveyears = this.getDates(props, nexttwelve);\n    twelveyears.map(data => {\n      months.push(\n        <td\n          key={data}\n          className={\n            data == this.state.year ? \"year-span-current\" : \"year-span\"\n          }\n          onClick={e => {\n            this.setYear(data);\n          }}\n        >\n          <span>{data}</span>\n        </td>\n      );\n    });\n    let rows = [];\n    let cells = [];\n\n    months.forEach((row, i) => {\n      if (i % 3 !== 0 || i == 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n    });\n    rows.push(cells);\n    let yearlist = rows.map((d, i) => {\n      return <tr key={i}>{d}</tr>;\n    });\n    return (\n      <table className=\"calendar-year\">\n        <thead>\n          <tr>\n            <th colSpan=\"4\">Select Year</th>\n          </tr>\n        </thead>\n        <tbody>{yearlist}</tbody>\n      </table>\n    );\n  };\n  setYear = year => {\n    // alert(year)\n    let dateObject = Object.assign({}, this.state.dateObject);\n    dateObject = moment(dateObject).set(\"year\", year);\n    this.setState({\n      dateObject: dateObject,\n      showYears: !this.state.showYears\n    });\n  };\n\n  showYears = () => {\n    if (this.state.showYears === false) {\n      this.setState({ showYears: true });\n    } else this.setState({ showYears: false });\n  };\n  // \"D\" = day\n  // \"M\" = month in number, \"MMM\" = month in short (Nov), \"MMMM\" = month in long (November)\n  // \"Y\" = year\n  test = () => {\n    console.log(this.state.dateObject.format(\"MMM\"));\n  };\n\n  handleClick = e => {\n    e.persist();\n    let value = e.target.innerText;\n    let dataValue;\n    if (value == \"\") {\n      console.log(\"empty\");\n      this.setState({\n        showMonths: false,\n        showYears: false\n      });\n    } else {\n      this.setState({\n        showMonths: false,\n        showYears: false\n      });\n      let currentMonth = this.month();\n      let currentYear = this.year();\n      dataValue = e.target.attributes.dataday.value;\n\n      console.log(`${currentMonth} ${dataValue} ${currentYear}`);\n    }\n  };\n\n  handleDecrease = e => {\n    this.setState({ dateObject: this.state.dateObject.subtract(1, \"month\") });\n  };\n  handleIncrease = e => {\n    this.setState({ dateObject: this.state.dateObject.add(1, \"month\") });\n  };\n  componentDidMount() {\n    let currentMonth = this.month();\n    let currentYear = this.year();\n    this.setState({ month: currentMonth, year: currentYear });\n  }\n\n  render() {\n    let weekdayshortname = this.weekdayshort.map(day => {\n      return (\n        <th key={day} className=\"week-day\">\n          {day}\n        </th>\n      );\n    });\n    let blanks = [];\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push(\n        <td key={`empty${i}`} className=\"calendar-day-empty\">\n          {\"\"}\n        </td>\n      );\n    }\n    let daysInMonth = [];\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      let currentDay = d == this.currentDay() ? \"today\" : \"\";\n      daysInMonth.push(\n        <td key={d} className={`calendar-day-${currentDay}`} dataday={d}>\n          {d}\n        </td>\n      );\n    }\n    var totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n      if (i === totalSlots.length - 1) {\n        rows.push(cells);\n      }\n    });\n    let daysinmonth = rows.map((d, i) => {\n      return <tr key={i}>{d}</tr>;\n    });\n    return (\n      <React.Fragment>\n        {/* <div>\n          <button onClick={this.getDates}>test</button>\n        </div> */}\n        <div className=\"tail-datetime-calendar\">\n          <div className=\"calendar-navi\">\n            {\" \"}\n            <span\n              style={{ float: \"left\", paddingTop: \"22px\" }}\n              onClick={this.handleDecrease}\n            >\n              <FontAwesomeIcon icon={faChevronLeft} size=\"2x\" />\n            </span>\n            <span onClick={this.showMonths} className=\"calendar-header\">\n              {this.month()}\n            </span>{\" \"}\n            <span onClick={this.showYears} className=\"calendar-header\">\n              {this.year()}\n            </span>\n            <span\n              style={{ float: \"right\", paddingTop: \"22px\" }}\n              onClick={this.handleIncrease}\n            >\n              <FontAwesomeIcon icon={faChevronRight} size=\"2x\" />\n            </span>\n          </div>\n        </div>\n        <div className=\"calendar-date\">\n          {this.state.showYears === true && (\n            <this.YearTable props={this.year()} />\n          )}\n          {this.state.showMonths === true && (\n            <this.MonthList data={moment.months()} />\n          )}\n        </div>\n\n        <div className=\"calendar-date\">\n          <table\n            className=\"calendar-day\"\n            onClick={() => {\n              this.setState({\n                showMonths: false,\n                showYears: false\n              });\n            }}\n          >\n            <thead>\n              <tr>{weekdayshortname}</tr>\n            </thead>\n            <tbody onClick={this.handleClick}>{daysinmonth}</tbody>\n          </table>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CalendarComponent;\n"]},"metadata":{},"sourceType":"module"}