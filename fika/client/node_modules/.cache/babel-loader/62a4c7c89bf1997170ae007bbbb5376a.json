{"ast":null,"code":"var _jsxFileName = \"/Users/josefutleg/Desktop/code/app/fika/fika/client/src/weatherWidget/weatherWidget.jsx\";\nimport React, { Component } from \"react\";\nimport \"./weather.css\";\nimport { _loadCurrentWeather } from \"./weatherService\";\nimport Temperature from \"./temperature\";\nimport Indicator from \"./weatherIndicator\";\nimport { parse } from \"querystring\";\n\nclass Weather extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      weather: \"\"\n    };\n  }\n\n  // getWeather = () => {\n  //   return _loadCurrentWeather().then(resultingJSON =>\n  //     this.setState({ weather: resultingJSON })\n  //   );\n  // };\n  // componentDidMount() {\n  //   this.getWeather();\n  //   this.loadInterval = setInterval(this.getWeather, 3600000);\n  // }\n  render() {\n    const divStyle = {\n      clear: \"both\",\n      paddingLeft: \"20px\"\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.props.isExpanded === true && React.createElement(\"div\", {\n      className: \"weatherBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Indicator, {\n      h: parseInt(this.props.h),\n      amPm: this.props.amPm,\n      description: this.props.description,\n      icon: this.props.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Temperature, {\n      temp: this.props.temp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: divStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.props.time)));\n  }\n\n}\n\nexport default Weather;","map":{"version":3,"sources":["/Users/josefutleg/Desktop/code/app/fika/fika/client/src/weatherWidget/weatherWidget.jsx"],"names":["React","Component","_loadCurrentWeather","Temperature","Indicator","parse","Weather","state","weather","render","divStyle","clear","paddingLeft","props","isExpanded","parseInt","h","amPm","description","icon","temp","time"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,SAASC,mBAAT,QAAoC,kBAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,KAAT,QAAsB,aAAtB;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BM,KAD8B,GACtB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KADsB;AAAA;;AAG9B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAG;AACfC,MAAAA,KAAK,EAAE,MADQ;AAEfC,MAAAA,WAAW,EAAE;AAFE,KAAjB;AAIA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWC,UAAX,KAA0B,IAA1B,IACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,CAAC,EAAEC,QAAQ,CAAC,KAAKF,KAAL,CAAWG,CAAZ,CADb;AAEE,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI,IAFnB;AAGE,MAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWK,WAH1B;AAIE,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWM,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAE,KAAKN,KAAL,CAAWO,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE;AAAG,MAAA,KAAK,EAAEV,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqB,KAAKG,KAAL,CAAWQ,IAAhC,CARF,CAFJ,CADF;AAgBD;;AAnC6B;;AAsChC,eAAef,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./weather.css\";\nimport { _loadCurrentWeather } from \"./weatherService\";\nimport Temperature from \"./temperature\";\nimport Indicator from \"./weatherIndicator\";\nimport { parse } from \"querystring\";\n\nclass Weather extends Component {\n  state = { weather: \"\" };\n\n  // getWeather = () => {\n  //   return _loadCurrentWeather().then(resultingJSON =>\n  //     this.setState({ weather: resultingJSON })\n  //   );\n  // };\n\n  // componentDidMount() {\n  //   this.getWeather();\n  //   this.loadInterval = setInterval(this.getWeather, 3600000);\n  // }\n\n  render() {\n    const divStyle = {\n      clear: \"both\",\n      paddingLeft: \"20px\"\n    };\n    return (\n      <div>\n        {this.props.isExpanded === true && (\n          <div className=\"weatherBox\">\n            <Indicator\n              h={parseInt(this.props.h)}\n              amPm={this.props.amPm}\n              description={this.props.description}\n              icon={this.props.icon}\n            />\n            <Temperature temp={this.props.temp} />\n            <p style={divStyle}>{this.props.time}</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}