{"ast":null,"code":"var _jsxFileName = \"/Users/josefutleg/Desktop/code/app/fika/fika/client/src/pages/CalendarComponent.jsx\";\nimport React, { Component } from \"react\";\nimport moment from \"moment\";\nimport \"./calendar.css\";\n\nclass CalendarComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.weekdayshort = moment.weekdaysShort();\n    this.state = {\n      dateObject: moment(),\n      allmonths: moment.months(),\n      month: \"\",\n      showMonths: false\n    };\n\n    this.firstDayOfMonth = () => {\n      let dateObject = this.state.dateObject;\n      let firstDay = moment(dateObject).startOf(\"month\").format(\"d\");\n      return firstDay;\n    };\n\n    this.daysInMonth = () => {\n      return this.state.dateObject.daysInMonth();\n    };\n\n    this.currentDay = () => {\n      return this.state.dateObject.format(\"D\");\n    };\n\n    this.month = () => {\n      return this.state.dateObject.format(\"MMMM\");\n    };\n\n    this.year = () => {\n      return this.state.dateObject.format(\"Y\");\n    };\n\n    this.MonthList = props => {\n      let months = [];\n      let rows = [];\n      let cells = [];\n      props.data.map(data => {\n        months.push(React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, data)));\n      });\n      months.forEach((row, i) => {\n        if (i % 3 !== 0 || i == 0) {\n          cells.push(row);\n        } else {\n          rows.push(cells);\n          cells = [];\n          cells.push(row);\n        }\n      });\n      rows.push(cells);\n      let monthlist = rows.map((d, i) => {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, d);\n      });\n      return React.createElement(\"table\", {\n        className: \"calendar-month\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        colSpan: \"4\",\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Select a Month\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, monthlist));\n    };\n\n    this.showMonths = () => {\n      if (this.state.showMonths === false) {\n        this.setState({\n          showMonths: true\n        });\n      } else this.setState({\n        showMonths: false\n      });\n    };\n\n    this.test = () => {\n      console.log(this.state.dateObject.format(\"MMM\"));\n    };\n\n    this.handleClick = e => {\n      e.persist();\n      let value = e.target.innerText;\n      let dataValue;\n\n      if (value == \"\") {\n        console.log(\"empty\");\n      } else {\n        dataValue = e.target.attributes.dataday.value;\n        console.log(dataValue);\n      }\n    };\n  }\n\n  componentDidMount() {\n    let currentMonth = this.month();\n    this.setState({\n      month: currentMonth\n    });\n  }\n\n  render() {\n    let weekdayshortname = this.weekdayshort.map(day => {\n      return React.createElement(\"th\", {\n        key: day,\n        className: \"week-day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, day);\n    });\n    let blanks = [];\n\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push(React.createElement(\"td\", {\n        className: \"calendar-day-empty\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"\"));\n    }\n\n    let daysInMonth = [];\n\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      let currentDay = d == this.currentDay() ? \"today\" : \"\";\n      daysInMonth.push(React.createElement(\"td\", {\n        key: d,\n        className: \"calendar-day-\".concat(currentDay),\n        dataday: d,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, d));\n    }\n\n    var totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n\n      if (i === totalSlots.length - 1) {\n        rows.push(cells);\n      }\n    });\n    let daysinmonth = rows.map((d, i) => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, d);\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.test,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"test\")), React.createElement(\"div\", {\n      className: \"tail-datetime-calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"calendar-navi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \" \", React.createElement(\"h1\", {\n      onClick: this.showMonths,\n      className: \"month-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.month()), \" \")), this.state.showMonths === true && React.createElement(\"div\", {\n      className: \"calendar-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(this.MonthList, {\n      data: moment.months(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"calendar-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"calendar-day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, weekdayshortname)), React.createElement(\"tbody\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, daysinmonth))));\n  }\n\n}\n\nexport default CalendarComponent;","map":{"version":3,"sources":["/Users/josefutleg/Desktop/code/app/fika/fika/client/src/pages/CalendarComponent.jsx"],"names":["React","Component","moment","CalendarComponent","weekdayshort","weekdaysShort","state","dateObject","allmonths","months","month","showMonths","firstDayOfMonth","firstDay","startOf","format","daysInMonth","currentDay","year","MonthList","props","rows","cells","data","map","push","forEach","row","i","monthlist","d","textAlign","setState","test","console","log","handleClick","e","persist","value","target","innerText","dataValue","attributes","dataday","componentDidMount","currentMonth","render","weekdayshortname","day","blanks","totalSlots","length","daysinmonth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport \"./calendar.css\";\n\nclass CalendarComponent extends Component {\n  weekdayshort = moment.weekdaysShort();\n  // returns an array of all weekdays starting at sunday with index 0\n  state = {\n    dateObject: moment(),\n    allmonths: moment.months(),\n    month: \"\",\n    showMonths: false\n  };\n\n  firstDayOfMonth = () => {\n    let dateObject = this.state.dateObject;\n    let firstDay = moment(dateObject)\n      .startOf(\"month\")\n      .format(\"d\");\n    return firstDay;\n  };\n  daysInMonth = () => {\n    return this.state.dateObject.daysInMonth();\n  };\n\n  currentDay = () => {\n    return this.state.dateObject.format(\"D\");\n  };\n\n  month = () => {\n    return this.state.dateObject.format(\"MMMM\");\n  };\n  year = () => {\n    return this.state.dateObject.format(\"Y\");\n  };\n\n  MonthList = props => {\n    let months = [];\n    let rows = [];\n    let cells = [];\n    props.data.map(data => {\n      months.push(\n        <td>\n          <span>{data}</span>\n        </td>\n      );\n    });\n    months.forEach((row, i) => {\n      if (i % 3 !== 0 || i == 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n    });\n    rows.push(cells);\n    let monthlist = rows.map((d, i) => {\n      return <tr>{d}</tr>;\n    });\n    return (\n      <table className=\"calendar-month\">\n        <thead>\n          <tr>\n            <th colSpan=\"4\" style={{ textAlign: \"center\" }}>\n              Select a Month\n            </th>\n          </tr>\n        </thead>\n        <tbody>{monthlist}</tbody>\n      </table>\n    );\n  };\n  showMonths = () => {\n    if (this.state.showMonths === false) {\n      this.setState({ showMonths: true });\n    } else this.setState({ showMonths: false });\n  };\n\n  // \"D\" = day\n  // \"M\" = month in number, \"MMM\" = month in short (Nov), \"MMMM\" = month in long (November)\n  // \"Y\" = year\n  test = () => {\n    console.log(this.state.dateObject.format(\"MMM\"));\n  };\n\n  handleClick = e => {\n    e.persist();\n    let value = e.target.innerText;\n    let dataValue;\n    if (value == \"\") {\n      console.log(\"empty\");\n    } else {\n      dataValue = e.target.attributes.dataday.value;\n\n      console.log(dataValue);\n    }\n  };\n  componentDidMount() {\n    let currentMonth = this.month();\n    this.setState({ month: currentMonth });\n  }\n\n  render() {\n    let weekdayshortname = this.weekdayshort.map(day => {\n      return (\n        <th key={day} className=\"week-day\">\n          {day}\n        </th>\n      );\n    });\n    let blanks = [];\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push(<td className=\"calendar-day-empty\">{\"\"}</td>);\n    }\n    let daysInMonth = [];\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      let currentDay = d == this.currentDay() ? \"today\" : \"\";\n      daysInMonth.push(\n        <td key={d} className={`calendar-day-${currentDay}`} dataday={d}>\n          {d}\n        </td>\n      );\n    }\n    var totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n      if (i === totalSlots.length - 1) {\n        rows.push(cells);\n      }\n    });\n    let daysinmonth = rows.map((d, i) => {\n      return <tr>{d}</tr>;\n    });\n    return (\n      <React.Fragment>\n        <div>\n          <button onClick={this.test}>test</button>\n        </div>\n        <div className=\"tail-datetime-calendar\">\n          <div className=\"calendar-navi\">\n            {\" \"}\n            <h1 onClick={this.showMonths} className=\"month-header\">\n              {this.month()}\n            </h1>{\" \"}\n          </div>\n        </div>\n        {this.state.showMonths === true && (\n          <div className=\"calendar-date\">\n            <this.MonthList data={moment.months()} />\n          </div>\n        )}\n        <div className=\"calendar-date\">\n          <table className=\"calendar-day\">\n            <thead>\n              <tr>{weekdayshortname}</tr>\n            </thead>\n            <tbody onClick={this.handleClick}>{daysinmonth}</tbody>\n          </table>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CalendarComponent;\n"]},"metadata":{},"sourceType":"module"}