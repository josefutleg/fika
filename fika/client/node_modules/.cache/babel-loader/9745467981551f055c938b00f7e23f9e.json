{"ast":null,"code":"var _jsxFileName = \"/Users/josefutleg/Desktop/code/app/fika/fika/client/src/App.js\";\nimport React, { Component } from \"react\"; // import logo from './logo.svg';\n\nimport \"./App.css\";\nimport NavBar from \"./components/navbar\";\nimport Weather from \"./weatherWidget/weatherWidget\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 4\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }],\n      weather: \"\"\n    };\n\n    this.getTime = () => {\n      const takeTwelve = n => n > 12 ? n - 12 : n,\n            addZero = n => n < 10 ? \"0\" + n : n;\n\n      setInterval(() => {\n        let d, h, m, s, t, amPm;\n        d = new Date();\n        h = addZero(takeTwelve(d.getHours()));\n        m = addZero(d.getMinutes());\n        s = addZero(d.getSeconds());\n        t = \"\".concat(h, \":\").concat(m, \":\").concat(s);\n        amPm = d.getHours() >= 12 ? \"pm\" : \"am\";\n        this.setState({\n          time: t,\n          amPm: amPm\n        });\n      }, 1000);\n    };\n  }\n\n  componentDidMount() {\n    this.loadInterval = setInterval(this.getTime, 1000);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      totalCounters: this.state.counters.filter(c => c.value > 0).length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Weather, {\n      time: this.state.time,\n      amPm: this.state.amPm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/josefutleg/Desktop/code/app/fika/fika/client/src/App.js"],"names":["React","Component","NavBar","Weather","App","state","counters","id","value","weather","getTime","takeTwelve","n","addZero","setInterval","d","h","m","s","t","amPm","Date","getHours","getMinutes","getSeconds","setState","time","componentDidMount","loadInterval","render","filter","c","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,+BAApB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE;AAFT,OADQ,EAKR;AACED,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE;AAFT,OALQ,EASR;AACED,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE;AAFT,OATQ,EAaR;AACED,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAbQ,CADJ;AAmBNC,MAAAA,OAAO,EAAE;AAnBH,KADkB;;AAAA,SA2B1BC,OA3B0B,GA2BhB,MAAM;AACd,YAAMC,UAAU,GAAGC,CAAC,IAAKA,CAAC,GAAG,EAAJ,GAASA,CAAC,GAAG,EAAb,GAAkBA,CAA3C;AAAA,YACEC,OAAO,GAAGD,CAAC,IAAKA,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CADrC;;AAGAE,MAAAA,WAAW,CAAC,MAAM;AAChB,YAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmBC,IAAnB;AAEAL,QAAAA,CAAC,GAAG,IAAIM,IAAJ,EAAJ;AACAL,QAAAA,CAAC,GAAGH,OAAO,CAACF,UAAU,CAACI,CAAC,CAACO,QAAF,EAAD,CAAX,CAAX;AACAL,QAAAA,CAAC,GAAGJ,OAAO,CAACE,CAAC,CAACQ,UAAF,EAAD,CAAX;AACAL,QAAAA,CAAC,GAAGL,OAAO,CAACE,CAAC,CAACS,UAAF,EAAD,CAAX;AACAL,QAAAA,CAAC,aAAMH,CAAN,cAAWC,CAAX,cAAgBC,CAAhB,CAAD;AAEAE,QAAAA,IAAI,GAAGL,CAAC,CAACO,QAAF,MAAgB,EAAhB,GAAqB,IAArB,GAA4B,IAAnC;AAEA,aAAKG,QAAL,CAAc;AACZC,UAAAA,IAAI,EAAEP,CADM;AAEZC,UAAAA,IAAI,EAAEA;AAFM,SAAd;AAID,OAfU,EAeR,IAfQ,CAAX;AAgBD,KA/CyB;AAAA;;AAuB1BO,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,YAAL,GAAoBd,WAAW,CAAC,KAAKJ,OAAN,EAAe,IAAf,CAA/B;AACD;;AAwBDmB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,aAAa,EAAE,KAAKxB,KAAL,CAAWC,QAAX,CAAoBwB,MAApB,CAA2BC,CAAC,IAAIA,CAAC,CAACvB,KAAF,GAAU,CAA1C,EAA6CwB,MAD9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAE,KAAK3B,KAAL,CAAWqB,IAA1B;AAAgC,MAAA,IAAI,EAAE,KAAKrB,KAAL,CAAWe,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,CADF;AAWD;;AA7DyB;;AAgE5B,eAAehB,GAAf","sourcesContent":["import React, { Component } from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\nimport NavBar from \"./components/navbar\";\nimport Weather from \"./weatherWidget/weatherWidget\";\n\nclass App extends Component {\n  state = {\n    counters: [\n      {\n        id: 1,\n        value: 4\n      },\n      {\n        id: 2,\n        value: 0\n      },\n      {\n        id: 3,\n        value: 0\n      },\n      {\n        id: 4,\n        value: 0\n      }\n    ],\n    weather: \"\"\n  };\n\n  componentDidMount() {\n    this.loadInterval = setInterval(this.getTime, 1000);\n  }\n\n  getTime = () => {\n    const takeTwelve = n => (n > 12 ? n - 12 : n),\n      addZero = n => (n < 10 ? \"0\" + n : n);\n\n    setInterval(() => {\n      let d, h, m, s, t, amPm;\n\n      d = new Date();\n      h = addZero(takeTwelve(d.getHours()));\n      m = addZero(d.getMinutes());\n      s = addZero(d.getSeconds());\n      t = `${h}:${m}:${s}`;\n\n      amPm = d.getHours() >= 12 ? \"pm\" : \"am\";\n\n      this.setState({\n        time: t,\n        amPm: amPm\n      });\n    }, 1000);\n  };\n\n  render() {\n    return (\n      <div>\n        <NavBar\n          totalCounters={this.state.counters.filter(c => c.value > 0).length}\n        />\n\n        <main>\n          <Weather time={this.state.time} amPm={this.state.amPm} />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}